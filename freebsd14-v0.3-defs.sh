#!/bin/sh
#
# FreeBSD 14 Be√°ll√≠t√≥ Szkript - V3.0 (Jav√≠tott √©s Optimaliz√°lt)
# Teljesen √∫jra√≠rt verzi√≥ FreeBSD 12 v√°ltozattb√≥l

# Ellen≈ërizz√ºk, hogy a szkript root felhaszn√°l√≥k√©nt fut-e
if [ "$(id -u)" -ne 0 ]; then
    echo "‚ö†Ô∏è Ez a szkript root jogosults√°gokat ig√©nyel. K√©rj√ºk, futtassa 'su' haszn√°lat√°val."
    exit 1
fi

# --- Seg√©dfunkci√≥k ---

# Ellen≈ërzi √©s be√°ll√≠tja a pkg-t
check_pkg() {
    if ! command -v pkg > /dev/null 2>&1; then
        echo "üì¶ A pkg csomagkezel≈ë nem tal√°lhat√≥. Telep√≠tj√ºk..."
        if ! env ASSUME_ALWAYS_YES=YES pkg bootstrap; then
            echo "‚ùå Hiba a pkg bootstrap sor√°n"
            exit 1
        fi
        echo "‚úÖ A pkg telep√≠t√©se sikeres."
    fi
    
    # Csomaglist√°k friss√≠t√©se
    echo "üîÑ Csomaglist√°k friss√≠t√©se..."
    pkg update -f
}

# Hibaellen≈ërz≈ë f√ºggv√©ny
error_check() {
    if [ $? -ne 0 ]; then
        echo "‚ùå Hiba t√∂rt√©nt a m≈±velet sor√°n"
        read -p "Nyomj Entert a folytat√°shoz..."
        return 1
    fi
    return 0
}

# NTP szolg√°ltat√°s √°llapot√°nak ellen≈ërz√©se
check_ntp_status() {
    if service ntpd onestatus > /dev/null 2>&1; then
        echo "‚úÖ NTP szolg√°ltat√°s fut"
        return 0
    else
        echo "‚ùå NTP szolg√°ltat√°s nem fut"
        return 1
    fi
}

# --- F≈ëmen√º ---
show_main_menu() {
    clear
    echo "========================================="
    echo "FreeBSD 14 Be√°ll√≠t√≥ Szkript V0.3 beta Complex IT Group @ Kispest 2025"
    echo "========================================="
    echo "1.  Csomaglista friss√≠t√©se √©s rendszer friss√≠t√©se"
    echo "2.  Alapvet≈ë alkalmaz√°sok telep√≠t√©se"
    echo "3.  H√°l√≥zati be√°ll√≠t√°sok"
    echo "4.  Hostn√©v √©s FQDN be√°ll√≠t√°sa"
    echo "5.  Felhaszn√°l√≥kezel√©s"
    echo "6.  SSH be√°ll√≠t√°sok"
    echo "7.  Id≈ëszinkroniz√°l√°s be√°ll√≠t√°sa (NTP)"
    echo "8.  Rendszeradatok list√°z√°sa"
    echo "9.  Webmin telep√≠t√©se"
    echo "10. SSH bejelentkez≈ë sz√∂veg szerkeszt√©se"
    echo "11. Kil√©p√©s"
    echo "========================================="
    printf "V√°lassz egy opci√≥t [1-11]: "
    read choice
}

# --- Csomagkezel√©si √©s telep√≠t√©si funkci√≥k ---

update_system() {
    check_pkg
    echo "üîÑ Rendszer friss√≠t√©se..."
    if pkg upgrade -y; then
        echo "‚úÖ A rendszer naprak√©sz."
    else
        echo "‚ùå Hiba t√∂rt√©nt a friss√≠t√©s sor√°n"
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

install_basic_apps() {
    check_pkg
    echo "üöÄ Alapvet≈ë alkalmaz√°sok telep√≠t√©se..."
    echo "Ez eltarthat n√©h√°ny percig..."
    
    # Python √©s alapf√ºgg≈ës√©gek MC-hez
    echo "üêç Python √©s f√ºgg≈ës√©gek telep√≠t√©se..."
    pkg install -y python3 py39-pip
    
    # üìÅ F√°jlkezel≈ëk √©s szerkeszt≈ëk (MC-vel egy√ºtt a f√ºgg≈ës√©gei)
    echo "üìÅ F√°jlkezel≈ëk √©s szerkeszt≈ëk telep√≠t√©se..."
    pkg install -y mc nano vim-console
    
    # üìä Rendszer monitoroz√°s
    echo "üìä Rendszer monitoroz√°s telep√≠t√©se..."
    pkg install -y htop bashtop glances
    
    # üåê H√°l√≥zati eszk√∂z√∂k
    echo "üåê H√°l√≥zati eszk√∂z√∂k telep√≠t√©se..."
    pkg install -y curl wget lynx nmap tcpdump mtr iftop iperf3
    
    # üì¶ Arch√≠vumkezel√©s
    echo "üì¶ Arch√≠vumkezel√©s telep√≠t√©se..."
    pkg install -y unzip zip p7zip unrar gzip bzip2 xz
    
    # üîß Egy√©b alapvet≈ë eszk√∂z√∂k
    echo "üîß Egy√©b alapvet≈ë eszk√∂z√∂k..."
    pkg install -y git sudo tmux tree lsof ripgrep bat exa
    
    if error_check; then
        echo ""
        echo "‚úÖ Minden alkalmaz√°s sikeresen telep√≠tve!"
        echo ""
        echo "üìñ Gyors haszn√°lati tippek:"
        echo "============================"
        echo "mc          - F√°jlkezel≈ë (F10 kil√©p√©s)"
        echo "htop        - Folyamatkezel≈ë"
        echo "nmap        - H√°l√≥zat vizsg√°lat"
        echo "bat         - F√°jl megjelen√≠t≈ë"
    fi
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- H√°l√≥zati funkci√≥k ---
show_network_menu() {
    while true; do
        clear
        echo "--- H√°l√≥zati Be√°ll√≠t√°sok ---"
        echo "1. H√°l√≥zati interf√©szek list√°z√°sa"
        echo "2. Statikus IP be√°ll√≠t√°sa"
        echo "3. DHCP be√°ll√≠t√°sa"
        echo "4. DNS szerverek be√°ll√≠t√°sa"
        echo "5. H√°l√≥zati szolg√°ltat√°sok √∫jraind√≠t√°sa"
        echo "6. Vissza a f≈ëmen√ºbe"
        echo "---------------------------"
        printf "V√°lassz egy opci√≥t [1-6]: "
        read net_choice

        case $net_choice in
            1)
                echo "--- H√°l√≥zati interf√©szek ---"
                ifconfig
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            2)
                printf "Interf√©sz neve (pl. vtnet0, em0): "
                read interface_name
                
                if ! ifconfig "$interface_name" > /dev/null 2>&1; then
                    echo "‚ùå Nem l√©tez≈ë interf√©sz: $interface_name"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                printf "IP c√≠m (pl. 192.168.1.100/24): "
                read ip_address
                printf "√Åtj√°r√≥ (pl. 192.168.1.1): "
                read gateway
                
                # IP form√°tum ellen≈ërz√©se
                if ! echo "$ip_address" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$'; then
                    echo "‚ùå √ârv√©nytelen IP form√°tum"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                # RC.conf-be √≠r√°s
                sysrc ifconfig_${interface_name}="inet ${ip_address}"
                sysrc defaultrouter="${gateway}"
                
                # Alkalmaz√°s
                service netif restart "$interface_name"
                echo "‚úÖ Statikus IP be√°ll√≠tva"
                ifconfig "$interface_name"
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            3)
                printf "Interf√©sz neve (pl. vtnet0, em0): "
                read interface_name
                
                if ! ifconfig "$interface_name" > /dev/null 2>&1; then
                    echo "‚ùå Nem l√©tez≈ë interf√©sz: $interface_name"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                sysrc ifconfig_${interface_name}="DHCP"
                service netif restart "$interface_name"
                echo "‚úÖ DHCP be√°ll√≠tva"
                ifconfig "$interface_name"
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            4)
                printf "Els≈ë DNS szerver (pl. 8.8.8.8): "
                read dns1
                printf "M√°sodik DNS szerver (pl. 1.1.1.1): "
                read dns2
                
                # DNS ellen≈ërz√©se
                if ! echo "$dns1" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' || \
                   ! echo "$dns2" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'; then
                    echo "‚ùå √ârv√©nytelen DNS c√≠m"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                echo "# FreeBSD DNS konfigur√°ci√≥" > /etc/resolv.conf
                echo "nameserver $dns1" >> /etc/resolv.conf
                echo "nameserver $dns2" >> /etc/resolv.conf
                echo "‚úÖ DNS be√°ll√≠tva:"
                cat /etc/resolv.conf
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            5)
                echo "üîÑ H√°l√≥zati szolg√°ltat√°sok √∫jraind√≠t√°sa..."
                service netif restart && service routing restart
                echo "‚úÖ H√°l√≥zat √∫jraind√≠tva"
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            6) break ;;
            *) echo "‚ùå √ârv√©nytelen v√°laszt√°s"; read -p "Nyomj Entert a folytat√°shoz..." ;;
        esac
    done
}

# --- Hostn√©v √©s FQDN be√°ll√≠t√°s ---
configure_hostname() {
    printf "Add meg a hosztnevet (pl. szerver): "
    read hostname
    printf "Add meg a domain nevet (pl. helyi.lan): "
    read domain
    
    if [ -z "$hostname" ] || [ -z "$domain" ]; then
        echo "‚ùå Hosztn√©v √©s domain nem lehet √ºres"
        read -p "Nyomj Entert a folytat√°shoz..."
        return
    fi
    
    full_hostname="${hostname}.${domain}"
    
    # /etc/rc.conf-be √≠r√°s
    sysrc hostname="$full_hostname"
    
    # /etc/hosts-be √≠r√°s
    current_ip=$(ifconfig | grep -E 'inet [0-9]' | grep -v 127.0.0.1 | head -1 | awk '{print $2}')
    if [ -n "$current_ip" ]; then
        # Elt√°vol√≠tjuk a r√©gi bejegyz√©seket
        grep -v "$current_ip" /etc/hosts > /tmp/hosts.tmp
        mv /tmp/hosts.tmp /etc/hosts
        
        # Hozz√°adjuk az √∫jat
        echo "$current_ip    $full_hostname $hostname" >> /etc/hosts
    fi
    
    # Alkalmaz√°s
    hostname "$full_hostname"
    
    echo "‚úÖ Hostn√©v be√°ll√≠tva: $full_hostname"
    echo "üåê FQDN: $full_hostname"
    echo "üì° IP c√≠m: ${current_ip:-'ismeretlen'}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- Felhaszn√°l√≥kezel√©s ---
manage_users() {
    while true; do
        clear
        echo "--- Felhaszn√°l√≥kezel√©s ---"
        echo "1. √öj felhaszn√°l√≥ hozz√°ad√°sa"
        echo "2. Felhaszn√°l√≥k list√°z√°sa"
        echo "3. Jelsz√≥ megv√°ltoztat√°sa"
        echo "4. Felhaszn√°l√≥ t√∂rl√©se"
        echo "5. Sudo jogok be√°ll√≠t√°sa"
        echo "6. Vissza a f≈ëmen√ºbe"
        echo "---------------------------"
        printf "V√°lassz opci√≥t [1-6]: "
        read user_choice
        
        case $user_choice in
            1) 
                printf "√öj felhaszn√°l√≥ neve: "
                read new_user
                
                if [ -z "$new_user" ]; then
                    echo "‚ùå N√©v nem lehet √ºres"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                if pw usershow "$new_user" > /dev/null 2>&1; then
                    echo "‚ùå L√©tez≈ë felhaszn√°l√≥: $new_user"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                if pw useradd -n "$new_user" -m -s /bin/tcsh; then
                    echo "‚úÖ Felhaszn√°l√≥ l√©trehozva: $new_user"
                    printf "Jelsz√≥ be√°ll√≠t√°sa? (i/n): "
                    read set_pass
                    if [ "$set_pass" = "i" ] || [ "$set_pass" = "I" ]; then
                        passwd "$new_user"
                    fi
                fi
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            2)
                echo "--- Felhaszn√°l√≥k ---"
                cut -d: -f1 /etc/passwd | sort
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            3)
                printf "Felhaszn√°l√≥ neve: "
                read username
                if pw usershow "$username" > /dev/null 2>&1; then
                    passwd "$username"
                else
                    echo "‚ùå Nem l√©tez≈ë felhaszn√°l√≥: $username"
                fi
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            4) 
                printf "T√∂rlend≈ë felhaszn√°l√≥: "
                read user_to_delete
                
                if ! pw usershow "$user_to_delete" > /dev/null 2>&1; then
                    echo "‚ùå Nem l√©tez≈ë felhaszn√°l√≥: $user_to_delete"
                    read -p "Nyomj Entert a folytat√°shoz..."
                    continue
                fi
                
                printf "‚ö†Ô∏è Biztos t√∂rl√∂d '%s' felhaszn√°l√≥t? (i/n): " "$user_to_delete"
                read confirm_delete
                if [ "$confirm_delete" = "i" ] || [ "$confirm_delete" = "I" ]; then
                    pw userdel -n "$user_to_delete" -r
                    echo "‚úÖ Felhaszn√°l√≥ t√∂r√∂lve: $user_to_delete"
                else
                    echo "‚ùå T√∂rl√©s megszak√≠tva"
                fi
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            5)
                echo "üîß Sudo be√°ll√≠t√°sa..."
                pkg install -y sudo
                if ! grep -q "^%wheel" /usr/local/etc/sudoers 2>/dev/null; then
                    echo "%wheel ALL=(ALL) ALL" >> /usr/local/etc/sudoers
                    echo "‚úÖ Wheel csoport hozz√°adva a sudoers-hez"
                else
                    echo "‚úÖ Wheel csoport m√°r rendelkezik sudo jogokkal"
                fi
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
            6) break ;;
            *) echo "‚ùå √ârv√©nytelen v√°laszt√°s"; read -p "Nyomj Entert a folytat√°shoz..." ;;
        esac
    done
}

# --- SSH be√°ll√≠t√°sok ---
configure_ssh() {
    while true; do
        clear
        echo "--- SSH Be√°ll√≠t√°sok ---"
        echo "1. Root bejelentkez√©s enged√©lyez√©se"
        echo "2. Root bejelentkez√©s letilt√°sa"
        echo "3. Jelsz√≥ hiteles√≠t√©s bekapcsol√°sa"
        echo "4. Jelsz√≥ hiteles√≠t√©s kikapcsol√°sa"
        echo "5. SSH szolg√°ltat√°s √∫jraind√≠t√°sa"
        echo "6. Vissza a f≈ëmen√ºbe"
        echo "---------------------------"
        printf "V√°lassz opci√≥t [1-6]: "
        read ssh_choice

        case $ssh_choice in
            1)
                echo "‚ö†Ô∏è Root SSH bejelentkez√©s enged√©lyez√©se..."
                sed -i '' 's/^#*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
                echo "‚úÖ Root bejelentkez√©s enged√©lyezve"
                ;;
            2)
                sed -i '' 's/^#*PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
                echo "‚úÖ Root bejelentkez√©s letiltva"
                ;;
            3)
                sed -i '' 's/^#*PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
                echo "‚úÖ Jelsz√≥ hiteles√≠t√©s enged√©lyezve"
                ;;
            4)
                sed -i '' 's/^#*PasswordAuthentication.*/PasswordAuthentication no/' /etc/ssh/sshd_config
                echo "‚úÖ Jelsz√≥ hiteles√≠t√©s letiltva"
                ;;
            5)
                service sshd restart
                echo "‚úÖ SSH szolg√°ltat√°s √∫jraind√≠tva"
                ;;
            6) break ;;
            *) echo "‚ùå √ârv√©nytelen v√°laszt√°s" ;;
        esac
        
        if [ "$ssh_choice" -ge 1 ] && [ "$ssh_choice" -le 4 ]; then
            service sshd restart
        fi
        
        read -p "Nyomj Entert a folytat√°shoz..."
    done
}

# --- Id≈ëszinkroniz√°l√°s (NTP) - Jav√≠tott verzi√≥ ---
configure_ntp() {
    while true; do
        clear
        echo "--- Id≈ëszinkroniz√°l√°s (NTP) ---"
        echo "1. NTP telep√≠t√©se magyar szerverekkel"
        echo "2. Alap√©rtelmezett NTP szerverek"
        echo "3. NTP szolg√°ltat√°s ind√≠t√°sa"
        echo "4. NTP szolg√°ltat√°s le√°ll√≠t√°sa"
        echo "5. Id≈ë √©s d√°tum be√°ll√≠t√°sa"
        echo "6. Id≈ëz√≥na be√°ll√≠t√°sa (Budapest)"
        echo "7. NTP √°llapot ellen≈ërz√©se"
        echo "8. Vissza a f≈ëmen√ºbe"
        echo "-------------------------------"
        
        # Aktu√°lis id≈ë megjelen√≠t√©se
        echo "üïê Aktu√°lis id≈ë: $(date)"
        echo "üåç Id≈ëz√≥na: $(readlink /etc/localtime 2>/dev/null || echo 'Nincs be√°ll√≠tva')"
        check_ntp_status
        echo "-------------------------------"
        printf "V√°lassz opci√≥t [1-8]: "
        read ntp_choice

        case $ntp_choice in
            1)
                echo "üá≠üá∫ NTP telep√≠t√©se magyar szerverekkel..."
                pkg install -y ntpd
                
                # Magyar NTP szerverek
                cat > /etc/ntp.conf << 'EOF'
# Magyar NTP szerverek
server 0.hu.pool.ntp.org iburst
server 1.hu.pool.ntp.org iburst
server 2.hu.pool.ntp.org iburst
server 3.hu.pool.ntp.org iburst

# Biztons√°gi be√°ll√≠t√°sok
restrict default kod nomodify notrap nopeer noquery
restrict 127.0.0.1
restrict ::1

driftfile /var/db/ntpd.drift
EOF
                echo "‚úÖ Magyar NTP szerverek be√°ll√≠tva"
                ;;
            2)
                echo "üåç Alap√©rtelmezett NTP szerverek..."
                pkg install -y ntpd
                
                cat > /etc/ntp.conf << 'EOF'
# FreeBSD alap√©rtelmezett NTP
server 0.freebsd.pool.ntp.org iburst
server 1.freebsd.pool.ntp.org iburst
server 2.freebsd.pool.ntp.org iburst

restrict default kod nomodify notrap nopeer noquery
restrict 127.0.0.1
restrict ::1

driftfile /var/db/ntpd.drift
EOF
                echo "‚úÖ Alap√©rtelmezett NTP szerverek be√°ll√≠tva"
                ;;
            3)
                sysrc ntpd_enable="YES"
                service ntpd start
                echo "‚úÖ NTP szolg√°ltat√°s ind√≠tva √©s enged√©lyezve"
                ;;
            4)
                service ntpd stop
                sysrc -x ntpd_enable 2>/dev/null
                echo "‚úÖ NTP szolg√°ltat√°s le√°ll√≠tva √©s letiltva"
                ;;
            5)
                printf "√öj d√°tum (√â√â√â√â-HH-NN, pl. 2024-01-15): "
                read new_date
                printf "√öj id≈ë (√ì√ì:PP:MM, pl. 14:30:00): "
                read new_time
                
                if date "$(echo "${new_date} ${new_time}" | sed 's/[-:]/ /g')" 2>/dev/null; then
                    # Hardware √≥ra friss√≠t√©se
                    hwclock --systohc
                    echo "‚úÖ Id≈ë be√°ll√≠tva: ${new_date} ${new_time}"
                else
                    echo "‚ùå √ârv√©nytelen d√°tum/id≈ë form√°tum"
                fi
                ;;
            6)
                echo "üá≠üá∫ Id≈ëz√≥na be√°ll√≠t√°sa Budapestre..."
                cp /usr/share/zoneinfo/Europe/Budapest /etc/localtime
                sysrc localtime="/usr/share/zoneinfo/Europe/Budapest"
                echo "‚úÖ Id≈ëz√≥na be√°ll√≠tva: Europe/Budapest"
                ;;
            7)
                echo "üìä NTP √°llapot:"
                if check_ntp_status; then
                    ntpq -p
                else
                    echo "NTP nem fut"
                fi
                ;;
            8) break ;;
            *) echo "‚ùå √ârv√©nytelen v√°laszt√°s" ;;
        esac
        
        read -p "Nyomj Entert a folytat√°shoz..."
    done
}

# --- Rendszeradatok list√°z√°sa - Jav√≠tott verzi√≥ ---
list_system_info() {
    echo "--- Rendszerinform√°ci√≥k ---"
    echo "üñ•Ô∏è  Hostn√©v: $(hostname)"
    echo "üåê FQDN: $(hostname -f 2>/dev/null || echo 'Nincs be√°ll√≠tva')"
    echo "üîß FreeBSD verzi√≥: $(freebsd-version)"
    echo "üíæ Kernel: $(uname -v)"
    echo "üïê Rendszerid≈ë: $(date)"
    echo "üåç Id≈ëz√≥na: $(readlink /etc/localtime 2>/dev/null || echo 'Nincs be√°ll√≠tva')"
    echo ""
    
    echo "--- Processzor ---"
    dmesg | grep -i cpu | head -5
    echo ""
    
    echo "--- Mem√≥ria ---"
    grep -E '^(Mem|Swap)' /var/run/dmesg.boot 2>/dev/null || echo "Mem√≥ria inform√°ci√≥ nem el√©rhet≈ë"
    echo ""
    
    echo "--- Lemezek ---"
    df -h
    echo ""
    
    echo "--- H√°l√≥zati interf√©szek ---"
    ifconfig | grep -E '^[a-z]' | grep -v lo0 | cut -d: -f1
    echo ""
    
    echo "--- Szolg√°ltat√°sok ---"
    service -l
    echo ""
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- Webmin telep√≠t√©se ---
install_webmin() {
    check_pkg
    echo "üåê Webmin telep√≠t√©se..."
    printf "Telep√≠tsem a Webmin-t? (i/n): "
    read install_choice
    if [ "$install_choice" = "i" ] || [ "$install_choice" = "I" ]; then
        if pkg install -y webmin; then
            sysrc webmin_enable="YES"
            service webmin start
            echo "‚úÖ Webmin telep√≠tve √©s ind√≠tva"
            echo "üåç El√©r√©s: https://$(hostname):10000"
        else
            echo "‚ùå Hiba a Webmin telep√≠t√©se sor√°n"
        fi
    else
        echo "‚ùå Telep√≠t√©s megszak√≠tva"
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- MOTD szerkeszt√©se ---
edit_ssh_banner() {
    echo "‚úçÔ∏è SSH bejelentkez≈ë sz√∂veg szerkeszt√©se"
    pkg install -y nano
    
    if [ ! -f /etc/motd ]; then
        touch /etc/motd
    fi
    
    nano /etc/motd
    echo "‚úÖ MOTD szerkesztve"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- F≈ë program ---
main() {
    while true; do
        show_main_menu
        case $choice in
            1) update_system ;;
            2) install_basic_apps ;;
            3) show_network_menu ;;
            4) configure_hostname ;;
            5) manage_users ;;
            6) configure_ssh ;;
            7) configure_ntp ;;
            8) list_system_info ;;
            9) install_webmin ;;
            10) edit_ssh_banner ;;
            11) 
                echo "üëã Viszl√°t!"
                exit 0 
                ;;
            *) 
                echo "‚ùå √ârv√©nytelen v√°laszt√°s: $choice"
                read -p "Nyomj Entert a folytat√°shoz..."
                ;;
        esac
    done
}

# Program ind√≠t√°sa
main
