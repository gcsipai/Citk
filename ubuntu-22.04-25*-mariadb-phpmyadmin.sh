#!/usr/bin/env bash
# ==============================================================================
# MariaDB Telep√≠t≈ë √©s Kezel≈ë Szkript
# K√©sz√ºlt: Ubuntu 22.04 LTS √©s √∫jabb, Debian 12/13 rendszerekhez
# Verzi√≥: 4.4 Ubuntu Edition 2025 (Apache2 + phpMyAdmin + Be√°ll√≠t√°st√°rol√≥ fix)
#
# F≈ëbb b≈ëv√≠t√©sek √©s jav√≠t√°sok:
#   - Ubuntu 22.04 LTS kompatibilit√°s biztos√≠tva
#   - MariaDB repository automatikus jav√≠t√°sa
#   - phpMyAdmin be√°ll√≠t√°st√°rol√≥ automatikus konfigur√°l√°sa
#   - PHP 8.1 t√°mogat√°s Ubuntu 22.04-hez
#   - Hozz√°f√©r√©si hib√°k jav√≠t√°sa
# ==============================================================================

# --- Glob√°lis V√°ltoz√≥k √©s Be√°ll√≠t√°sok ---
set -o pipefail

# Sz√≠nek a jobb olvashat√≥s√°g√©rt
C_RESET='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_CYAN='\033[0;36m'
C_ORANGE='\033[0;33m'

# Ubuntu-specifikus el√©r√©si utak
if grep -q "Ubuntu" /etc/os-release; then
    MARIADB_CONFIG="/etc/mysql/mariadb.conf.d/50-server.cnf"
    PHP_VERSION="8.1"
    # Ubuntu verzi√≥ detekt√°l√°sa
    if command -v lsb_release >/dev/null; then
        UBUNTU_CODENAME=$(lsb_release -sc)
        UBUNTU_VERSION=$(lsb_release -sr)
    else
        UBUNTU_CODENAME="jammy"
        UBUNTU_VERSION="22.04"
    fi
else
    MARIADB_CONFIG="/etc/mysql/mariadb.conf.d/50-server.cnf"
    PHP_VERSION="8.2"
    UBUNTU_CODENAME="bookworm"
    UBUNTU_VERSION="12"
fi

BACKUP_DIR_BASE="/var/backups/mariadb"
MARIADB_ROOT_PASSWORD=""
PHPMYADMIN_CONFIG="/etc/phpmyadmin/config.inc.php"

# --- Seg√©df√ºggv√©nyek ---
function print_msg() { local color="$1"; local message="$2"; echo -e "${color}${message}${C_RESET}"; }
function press_enter_to_continue() { echo; read -rp "Nyomjon ENTER-t a folytat√°shoz..."; }
function command_exists() { command -v "$1" &>/dev/null; }

function check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Hiba: Ez a szkript csak root (vagy sudo) jogosults√°ggal futtathat√≥."
        exit 1
    fi
}

function get_os_info() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS_NAME=$NAME
        OS_VERSION=$VERSION_ID
    else
        OS_NAME=$(uname -s)
        OS_VERSION=$(uname -r)
    fi
}

function get_root_password_if_needed() {
    if [ -z "$MARIADB_ROOT_PASSWORD" ]; then
        print_msg "$C_YELLOW" "‚ö†Ô∏è K√©rem, adja meg a MariaDB root jelszav√°t."
        read -rsp "MariaDB root jelsz√≥: " MARIADB_ROOT_PASSWORD
        echo

        if ! mysql -u root -p"${MARIADB_ROOT_PASSWORD}" -e "quit" 2>/dev/null; then
            print_msg "$C_RED" "‚ùå √ârv√©nytelen MariaDB root jelsz√≥. K√©rem, pr√≥b√°lja √∫jra."
            MARIADB_ROOT_PASSWORD=""
            return 1
        fi
        return 0
    fi
    return 0
}

function fix_mariadb_repository() {
    print_msg "$C_CYAN" "üîß MariaDB repository probl√©m√°k jav√≠t√°sa..."
    
    # Repository f√°jl ellen≈ërz√©se
    local repo_file="/etc/apt/sources.list.d/mariadb.list"
    
    if [ -f "$repo_file" ]; then
        print_msg "$C_YELLOW" "üìù MariaDB repository f√°jl tal√°lhat√≥: $repo_file"
        
        # Helytelen codename keres√©se √©s jav√≠t√°sa
        if grep -q "plucky" "$repo_file"; then
            print_msg "$C_YELLOW" "üîÑ 'plucky' helyettes√≠t√©se '$UBUNTU_CODENAME'-re..."
            sed -i "s/plucky/$UBUNTU_CODENAME/g" "$repo_file"
            print_msg "$C_GREEN" "‚úÖ Repository f√°jl jav√≠tva."
        fi
        
        # Tartalom megjelen√≠t√©se
        echo -e "\nüìÑ Repository tartalma:"
        cat "$repo_file"
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  Nincs MariaDB repository f√°jl."
    fi
    
    # Apt forr√°sok moderniz√°l√°sa (ha sz√ºks√©ges)
    if apt update 2>&1 | grep -q "modernize-sources"; then
        print_msg "$C_CYAN" "üîÑ Apt forr√°sok moderniz√°l√°sa..."
        apt modernize-sources -y
    fi
    
    # Friss√≠t√©s
    print_msg "$C_CYAN" "üì¶ Csomaglist√°k friss√≠t√©se..."
    if apt update; then
        print_msg "$C_GREEN" "‚úÖ Repository probl√©m√°k jav√≠tva √©s csomaglist√°k friss√≠tve."
    else
        print_msg "$C_RED" "‚ùå Hiba a friss√≠t√©s sor√°n. K√©rem, ellen≈ërizze a repository be√°ll√≠t√°sokat."
        return 1
    fi
}

function add_mariadb_repository() {
    print_msg "$C_CYAN" "üì¶ MariaDB hivatalos repository hozz√°ad√°sa..."
    
    # R√©gi repository-k elt√°vol√≠t√°sa
    if [ -f "/etc/apt/sources.list.d/mariadb.list" ]; then
        rm -f /etc/apt/sources.list.d/mariadb.list
    fi
    
    # F√ºgg≈ës√©gek telep√≠t√©se
    apt-get install -y apt-transport-https curl
    
    # MariaDB GPG kulcs hozz√°ad√°sa
    curl -o /etc/apt/trusted.gpg.d/mariadb_repo_signing_key.asc 'https://mariadb.org/mariadb_release_signing_key.asc'
    
    # Helyes repository hozz√°ad√°sa
    sh -c "echo 'deb [arch=amd64,arm64,ppc64el] https://mirrors.gigenet.com/mariadb/repo/10.11/ubuntu $UBUNTU_CODENAME main' > /etc/apt/sources.list.d/mariadb.list"
    
    # Friss√≠t√©s
    apt-get update
}

# --------------------------------------------------------------------------------------------------

## 1. APACHE2 TELEP√çT√âS √âS BE√ÅLL√çT√ÅS
function setup_apache() {
    print_msg "$C_BLUE" "## 1. Apache2 webszerver telep√≠t√©se √©s konfigur√°l√°sa ##"
    
    get_os_info
    print_msg "$C_CYAN" "üîç Oper√°ci√≥s rendszer: $OS_NAME $OS_VERSION"
    
    # Repository probl√©m√°k jav√≠t√°sa
    fix_mariadb_repository
    
    if dpkg -s apache2 &>/dev/null; then
        print_msg "$C_GREEN" "‚úÖ Az Apache2 m√°r telep√≠tve van."
    else
        print_msg "$C_CYAN" "üì¶ Apache2 telep√≠t√©se..."
        apt-get update
        if ! apt-get install -y apache2; then
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt az Apache2 telep√≠t√©se sor√°n."
            return 1
        fi
        print_msg "$C_GREEN" "‚úÖ Apache2 sikeresen telep√≠tve."
    fi
    
    # Apache2 modulok bekapcsol√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Apache2 modulok aktiv√°l√°sa..."
    a2enmod rewrite &>/dev/null
    a2enmod ssl &>/dev/null
    
    # Apache2 szolg√°ltat√°s kezel√©se
    systemctl restart apache2
    systemctl enable apache2 &>/dev/null
    
    # T≈±zfal be√°ll√≠t√°sa (ha akt√≠v)
    if command_exists ufw && ufw status | grep -q "active"; then
        ufw allow 'Apache Full' &>/dev/null
        print_msg "$C_GREEN" "‚úÖ T≈±zfalszab√°ly hozz√°adva a HTTP/HTTPS forgalomhoz."
    fi
    
    print_msg "$C_GREEN" "‚úÖ Apache2 sikeresen konfigur√°lva √©s elind√≠tva."
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 2. JAV√çTOTT PHPMYADMIN TELEP√çT√âS - Be√°ll√≠t√°st√°rol√≥ fix-szel
function install_phpmyadmin_apache() {
    print_msg "$C_BLUE" "## 2. phpMyAdmin Telep√≠t√©se (Be√°ll√≠t√°st√°rol√≥ fix-szel) ##"
    
    get_os_info
    print_msg "$C_CYAN" "üîç Oper√°ci√≥s rendszer: $OS_NAME $OS_VERSION"
    
    # Root jelsz√≥ ellen≈ërz√©se
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs MariaDB root jelsz√≥. A phpMyAdmin telep√≠t√©se megszak√≠tva."
        return 1
    fi

    # PHP √©s sz√ºks√©ges b≈ëv√≠tm√©nyek telep√≠t√©se
    print_msg "$C_CYAN" "üì¶ PHP √©s sz√ºks√©ges modulok telep√≠t√©se..."
    
    # PHP verzi√≥ detekt√°l√°sa Ubuntu alapj√°n
    if grep -q "Ubuntu 22.04" /etc/os-release; then
        PHP_PACKAGES="php8.1 php8.1-mysql php8.1-mbstring php8.1-curl php8.1-zip php8.1-gd php8.1-xml"
    else
        PHP_PACKAGES="php php-mysql php-mbstring php-curl php-zip php-gd php-xml"
    fi
    
    if ! apt-get install -y $PHP_PACKAGES; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a PHP modulok telep√≠t√©se sor√°n."
        return 1
    fi
    
    # phpMyAdmin telep√≠t√©se nem interakt√≠v m√≥don
    print_msg "$C_CYAN" "üì¶ phpMyAdmin telep√≠t√©se..."
    export DEBIAN_FRONTEND=noninteractive
    
    # El≈ëz≈ë phpMyAdmin konfigur√°ci√≥k elt√°vol√≠t√°sa (ha vannak)
    if dpkg -s phpmyadmin &>/dev/null; then
        apt-get remove --purge -y phpmyadmin
    fi
    
    # V√°laszok be√°ll√≠t√°sa
    echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/admin-pass password $MARIADB_ROOT_PASSWORD" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/app-pass password $MARIADB_ROOT_PASSWORD" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/app-password-confirm password $MARIADB_ROOT_PASSWORD" | debconf-set-selections
    
    if ! apt-get install -yq phpmyadmin; then
        print_msg "$C_RED" "‚ùå Hiba a phpMyAdmin telep√≠t√©se sor√°n."
        return 1
    fi
    
    # Be√°ll√≠t√°st√°rol√≥ konfigur√°l√°sa
    configure_phpmyadmin_storage
    
    # Apache konfigur√°ci√≥ aktiv√°l√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Apache2 konfigur√°l√°sa a phpMyAdmin-hoz..."
    a2enconf phpmyadmin &>/dev/null
    
    # PHP mem√≥ria limit n√∂vel√©se
    if [ -f "/etc/php/8.1/apache2/php.ini" ]; then
        sed -i 's/^memory_limit = .*/memory_limit = 256M/' /etc/php/8.1/apache2/php.ini
    fi
    
    systemctl reload apache2
    
    print_msg "$C_GREEN" "‚úÖ A phpMyAdmin sikeresen telep√≠tve √©s konfigur√°lva."
    print_msg "$C_CYAN" "üåê El√©rhet≈ë itt: http://$(hostname -I | awk '{print $1}')/phpmyadmin"
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## PHPMYADMIN BE√ÅLL√çT√ÅST√ÅROL√ì KONFIGUR√ÅL√ÅSA
function configure_phpmyadmin_storage() {
    print_msg "$C_CYAN" "üîß phpMyAdmin be√°ll√≠t√°st√°rol√≥ konfigur√°l√°sa..."
    
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥. A be√°ll√≠t√°st√°rol√≥ konfigur√°l√°sa kihagyva."
        return 1
    fi
    
    # 1. Adatb√°zis √©s t√°bl√°k l√©trehoz√°sa
    print_msg "$C_CYAN" "üì¶ Be√°ll√≠t√°st√°rol√≥ adatb√°zis l√©trehoz√°sa..."
    
    # SQL f√°jl keres√©se
    local sql_file=""
    if [ -f "/usr/share/phpmyadmin/sql/create_tables.sql" ]; then
        sql_file="/usr/share/phpmyadmin/sql/create_tables.sql"
    elif [ -f "/usr/share/doc/phpmyadmin/sql/create_tables.sql" ]; then
        sql_file="/usr/share/doc/phpmyadmin/sql/create_tables.sql"
    else
        print_msg "$C_YELLOW" "‚ö†Ô∏è  create_tables.sql f√°jl nem tal√°lhat√≥. K√©rem, telep√≠tse manu√°lisan."
        return 1
    fi
    
    # Adatb√°zis l√©trehoz√°sa
    mysql -u root -p"${MARIADB_ROOT_PASSWORD}" < "$sql_file" 2>/dev/null
    
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Hiba a be√°ll√≠t√°st√°rol√≥ adatb√°zis l√©trehoz√°sakor."
        return 1
    fi
    
    # 2. Dedik√°lt felhaszn√°l√≥ l√©trehoz√°sa
    print_msg "$C_CYAN" "üë§ Dedik√°lt felhaszn√°l√≥ l√©trehoz√°sa a be√°ll√≠t√°st√°rol√≥hoz..."
    
    local pma_password=$(openssl rand -base64 16)
    mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF 2>/dev/null
CREATE USER IF NOT EXISTS 'pma'@'localhost' IDENTIFIED BY '${pma_password}';
GRANT ALL PRIVILEGES ON phpmyadmin.* TO 'pma'@'localhost';
FLUSH PRIVILEGES;
EOF
    
    # 3. Konfigur√°ci√≥s f√°jl m√≥dos√≠t√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Konfigur√°ci√≥s f√°jl friss√≠t√©se..."
    
    if [ -f "$PHPMYADMIN_CONFIG" ]; then
        # Biztons√°gi ment√©s
        cp "$PHPMYADMIN_CONFIG" "${PHPMYADMIN_CONFIG}.backup"
        
        # Konfigur√°ci√≥ hozz√°ad√°sa
        cat >> "$PHPMYADMIN_CONFIG" <<EOF

/* phpMyAdmin konfigur√°ci√≥s t√°rol√≥ be√°ll√≠t√°sai - Automatikus be√°ll√≠t√°s */
\$cfg['Servers'][\$i]['controlhost'] = 'localhost';
\$cfg['Servers'][\$i]['controluser'] = 'pma';
\$cfg['Servers'][\$i]['controlpass'] = '${pma_password}';
\$cfg['Servers'][\$i]['pmadb'] = 'phpmyadmin';
\$cfg['Servers'][\$i]['bookmarktable'] = 'pma__bookmark';
\$cfg['Servers'][\$i]['relation'] = 'pma__relation';
\$cfg['Servers'][\$i]['table_info'] = 'pma__table_info';
\$cfg['Servers'][\$i]['table_coords'] = 'pma__table_coords';
\$cfg['Servers'][\$i]['pdf_pages'] = 'pma__pdf_pages';
\$cfg['Servers'][\$i]['column_info'] = 'pma__column_info';
\$cfg['Servers'][\$i]['history'] = 'pma__history';
\$cfg['Servers'][\$i]['table_uiprefs'] = 'pma__table_uiprefs';
\$cfg['Servers'][\$i]['tracking'] = 'pma__tracking';
\$cfg['Servers'][\$i]['userconfig'] = 'pma__userconfig';
\$cfg['Servers'][\$i]['recent'] = 'pma__recent';
\$cfg['Servers'][\$i]['favorite'] = 'pma__favorite';
\$cfg['Servers'][\$i]['users'] = 'pma__users';
\$cfg['Servers'][\$i]['usergroups'] = 'pma__usergroups';
\$cfg['Servers'][\$i]['navigationhiding'] = 'pma__navigationhiding';
\$cfg['Servers'][\$i]['savedsearches'] = 'pma__savedsearches';
\$cfg['Servers'][\$i]['central_columns'] = 'pma__central_columns';
\$cfg['Servers'][\$i]['designer_settings'] = 'pma__designer_settings';
\$cfg['Servers'][\$i]['export_templates'] = 'pma__export_templates';
EOF
        
        print_msg "$C_GREEN" "‚úÖ Be√°ll√≠t√°st√°rol√≥ sikeresen konfigur√°lva."
        print_msg "$C_CYAN" "üìù Felhaszn√°l√≥: pma, Jelsz√≥: ${pma_password}"
    else
        print_msg "$C_RED" "‚ùå phpMyAdmin konfigur√°ci√≥s f√°jl nem tal√°lhat√≥: $PHPMYADMIN_CONFIG"
        return 1
    fi
}

# --------------------------------------------------------------------------------------------------

## 3. MARIADB SZERVER TELEP√çT√âSE - Ubuntu optimaliz√°lt
function install_mariadb() {
    print_msg "$C_BLUE" "## 3. MariaDB szerver telep√≠t√©se (Ubuntu optimaliz√°lt) ##"

    get_os_info
    print_msg "$C_CYAN" "üîç Oper√°ci√≥s rendszer: $OS_NAME $OS_VERSION"

    # Repository probl√©m√°k jav√≠t√°sa
    fix_mariadb_repository

    # Csomaglist√°k friss√≠t√©se
    print_msg "$C_CYAN" "üì¶ Csomaglist√°k friss√≠t√©se..."
    if ! apt-get update -y; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a csomaglist√°k friss√≠t√©se sor√°n."
        return 1
    fi

    # MariaDB repository hozz√°ad√°sa (opcion√°lis - csak ha nincs)
    read -rp "Szeretn√© hozz√°adni a hivatalos MariaDB repository-t a leg√∫jabb verzi√≥hoz? (i/n): " add_repo
    if [[ "$add_repo" =~ ^[iI](gen)?$ ]]; then
        add_mariadb_repository
    fi

    # MariaDB szerver telep√≠t√©se
    print_msg "$C_CYAN" "üì¶ MariaDB szerver telep√≠t√©se..."
    if ! dpkg -s mariadb-server &>/dev/null; then
        if ! apt-get install -y mariadb-server; then
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a MariaDB telep√≠t√©se sor√°n."
            return 1
        fi
    else
        print_msg "$C_GREEN" "‚úÖ MariaDB m√°r telep√≠tve van."
    fi

    # A szolg√°ltat√°s elind√≠t√°sa √©s enged√©lyez√©se
    print_msg "$C_CYAN" "üöÄ MariaDB szolg√°ltat√°s ind√≠t√°sa..."
    if ! systemctl start mariadb.service; then
        print_msg "$C_RED" "‚ùå Nem siker√ºlt elind√≠tani a MariaDB szolg√°ltat√°st."
        return 1
    fi
    systemctl enable mariadb.service &>/dev/null

    # Ubuntu-specifikus biztons√°gi be√°ll√≠t√°sok
    if grep -q "Ubuntu" /etc/os-release; then
        print_msg "$C_CYAN" "üîí Ubuntu-specifikus biztons√°gi be√°ll√≠t√°sok..."
        # Biztons√°gos telep√≠t√©si script futtat√°sa
        if command -v mysql_secure_installation &>/dev/null; then
            print_msg "$C_YELLOW" "‚ö†Ô∏è  Futtassa manu√°lisan a 'mysql_secure_installation' parancsot a biztons√°gi be√°ll√≠t√°sokhoz."
        fi
    fi

    # A szolg√°ltat√°s √°llapot√°nak ellen≈ërz√©se
    if systemctl is-active --quiet mariadb.service; then
        print_msg "$C_GREEN" "‚úÖ A MariaDB sikeresen telep√≠tve √©s fut."
        print_msg "$C_CYAN" "üìä MariaDB verzi√≥: $(mysqld --version 2>/dev/null | cut -d' ' -f2-4)"
    else
        print_msg "$C_RED" "‚ùå A MariaDB telep√≠t√©se sikeres, de a szolg√°ltat√°s nem fut."
        return 1
    fi

    print_msg "$C_YELLOW" "‚ö†Ô∏è  K√©rem, a 4. men√ºpontban √°ll√≠tsa be a root jelsz√≥t √©s a hozz√°f√©r√©st!"
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 4. HOZZ√ÅF√âR√âS BE√ÅLL√çT√ÅSA - Ubuntu kompatibilis
function configure_access() {
    print_msg "$C_BLUE" "## 4. MariaDB Hozz√°f√©r√©s Be√°ll√≠t√°sa ##"
    
    # El≈ësz√∂r ellen≈ërizz√ºk, hogy fut-e a MariaDB
    if ! systemctl is-active --quiet mariadb.service; then
        print_msg "$C_RED" "‚ùå A MariaDB szolg√°ltat√°s nem fut. El≈ësz√∂r ind√≠tsa el!"
        systemctl start mariadb.service
    fi
    
    print_msg "$C_CYAN" "üîê MariaDB Root Jelsz√≥ Be√°ll√≠t√°sa..."
    local new_root_password
    local confirm_password
    
    while true; do
        read -rsp "√öj MariaDB Root Jelsz√≥: " new_root_password
        echo
        read -rsp "Jelsz√≥ meger≈ës√≠t√©se: " confirm_password
        echo
        
        if [ -z "$new_root_password" ]; then
            print_msg "$C_RED" "‚ùå A jelsz√≥ nem lehet √ºres!"
            continue
        fi
        
        if [ "$new_root_password" != "$confirm_password" ]; then
            print_msg "$C_RED" "‚ùå A jelszavak nem egyeznek!"
            continue
        fi
        break
    done

    # Jelsz√≥ be√°ll√≠t√°sa Ubuntu/Debian kompatibilis m√≥don
    print_msg "$C_CYAN" "‚öôÔ∏è  Root jelsz√≥ be√°ll√≠t√°sa..."
    
    # MySQL/MariaDB szolg√°ltat√°s √∫jraind√≠t√°sa biztons√°gi okokb√≥l
    systemctl restart mariadb.service
    
    # Jelsz√≥ be√°ll√≠t√°sa alternat√≠v m√≥dszerrel
    mysql -u root <<EOF 2>/dev/null
ALTER USER 'root'@'localhost' IDENTIFIED BY '${new_root_password}';
FLUSH PRIVILEGES;
EOF

    if [ $? -eq 0 ]; then
        MARIADB_ROOT_PASSWORD="$new_root_password"
        print_msg "$C_GREEN" "‚úÖ Root jelsz√≥ sikeresen be√°ll√≠tva."
    else
        # Alternat√≠v m√≥dszer socket autentik√°ci√≥val
        sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${new_root_password}'; FLUSH PRIVILEGES;" 2>/dev/null
        if [ $? -eq 0 ]; then
            MARIADB_ROOT_PASSWORD="$new_root_password"
            print_msg "$C_GREEN" "‚úÖ Root jelsz√≥ sikeresen be√°ll√≠tva (socket auth)."
        else
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a jelsz√≥ be√°ll√≠t√°sa sor√°n."
            return 1
        fi
    fi
    
    # T√°voli hozz√°f√©r√©s be√°ll√≠t√°sa
    read -rp "Enged√©lyezi a t√°voli root hozz√°f√©r√©st? (i/n): " remote_access
    if [[ "$remote_access" =~ ^[iI](gen)?$ ]]; then
        print_msg "$C_CYAN" "üåê T√°voli hozz√°f√©r√©s be√°ll√≠t√°sa..."
        
        # Root felhaszn√°l√≥ l√©trehoz√°sa minden hostr√≥l
        mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF 2>/dev/null
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${MARIADB_ROOT_PASSWORD}' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EOF
        
        # MariaDB konfigur√°ci√≥ m√≥dos√≠t√°sa
        if [ -f "$MARIADB_CONFIG" ]; then
            sed -i 's/^bind-address\s*=\s*127.0.0.1/#bind-address = 127.0.0.1\nbind-address = 0.0.0.0/' "$MARIADB_CONFIG"
        else
            print_msg "$C_YELLOW" "‚ö†Ô∏è  MariaDB konfigur√°ci√≥s f√°jl nem tal√°lhat√≥: $MARIADB_CONFIG"
        fi
        
        systemctl restart mariadb.service
        
        # T≈±zfal be√°ll√≠t√°sa
        if command_exists ufw && ufw status | grep -q "active"; then
            ufw allow 3306/tcp &>/dev/null
            print_msg "$C_GREEN" "‚úÖ T≈±zfalszab√°ly hozz√°adva a 3306-os porthoz."
        fi
        
        print_msg "$C_GREEN" "‚úÖ T√°voli hozz√°f√©r√©s enged√©lyezve."
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  T√°voli hozz√°f√©r√©s tiltva (alap√©rtelmezett)."
    fi

    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 5. FELHASZN√ÅL√ì- √âS JOGOSULTS√ÅGKEZEL√âS
function user_management() {
    print_msg "$C_BLUE" "## 5. Felhaszn√°l√≥- √©s Jogosults√°gkezel√©s (MariaDB) ##"
    
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. M≈±velet megszak√≠tva."
        return 1
    fi

    print_msg "$C_CYAN" "‚ÑπÔ∏è  Jelenleg csak a MariaDB parancssor √©rhet≈ë el. A teljes funkcionalit√°s√©rt haszn√°lja a phpMyAdmin-t!"
    print_msg "$C_CYAN" "‚ñ∂Ô∏è  Bel√©p√©s a MariaDB parancssori kliensbe:"
    
    mysql -u root -p"${MARIADB_ROOT_PASSWORD}"

    print_msg "$C_CYAN" "‚Ü©Ô∏è  Visszat√©r√©s a f≈ëmen√ºbe."
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 6. ADATB√ÅZIS MENT√âSE - Ubuntu kompatibilis
function backup_database() {
    print_msg "$C_BLUE" "## 6. Adatb√°zis ment√©se (WDB form√°tum) ##"
    
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. A ment√©s megszak√≠tva."
        return 1
    fi
    
    # Ment√©si k√∂nyvt√°r ellen≈ërz√©se/l√©trehoz√°sa
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    local backup_dir="${BACKUP_DIR_BASE}/backup_${timestamp}"
    local backup_file="${backup_dir}/database_backup.wdb"
    
    mkdir -p "$backup_dir"
    
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nem siker√ºlt l√©trehozni a ment√©si k√∂nyvt√°rat: $backup_dir"
        return 1
    fi
    
    print_msg "$C_CYAN" "üíæ Adatb√°zis ment√©se folyamatban: $backup_file"
    
    # Adatb√°zis ment√©se mysqldump seg√≠ts√©g√©vel
    if ! mysqldump -u root -p"${MARIADB_ROOT_PASSWORD}" --all-databases --single-transaction --routines --events > "$backup_file" 2>/dev/null; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt az adatb√°zis ment√©se sor√°n."
        rm -rf "$backup_dir"
        return 1
    fi
    
    # Sikeres ment√©s ut√°ni teend≈ëk
    local file_size=$(du -h "$backup_file" | cut -f1)
    print_msg "$C_GREEN" "‚úÖ Adatb√°zis sikeresen mentve!"
    print_msg "$C_CYAN" "üìÅ F√°jl helye: $backup_file"
    print_msg "$C_CYAN" "üìè F√°jl m√©ret: $file_size"
    
    # Biztons√°gi m√°solat a legut√≥bbi ment√©sr≈ël
    local latest_backup="${BACKUP_DIR_BASE}/latest"
    ln -sfn "$backup_dir" "$latest_backup"
    print_msg "$C_CYAN" "üîó Legut√≥bbi ment√©s linkje friss√≠tve: $latest_backup"

    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 7. ADATB√ÅZIS VISSZA√ÅLL√çT√ÅSI FUNKCI√ì
function restore_database() {
    print_msg "$C_BLUE" "## 7. Adatb√°zis vissza√°ll√≠t√°sa ##"
    
    if [ ! -d "$BACKUP_DIR_BASE" ]; then
        print_msg "$C_RED" "‚ùå Nincsenek ment√©sek a $BACKUP_DIR_BASE k√∂nyvt√°rban."
        return 1
    fi
    
    local backups_temp=($(find "$BACKUP_DIR_BASE" -type d -name "backup_*" | sort -r))
    local backups=()

    for dir in "${backups_temp[@]}"; do
        local file="$dir/database_backup.wdb"
        if [ -f "$file" ]; then
            backups+=("$file")
        fi
    done

    if [ ${#backups[@]} -eq 0 ]; then
        print_msg "$C_RED" "‚ùå Nem tal√°lhat√≥ WDB ment√©si f√°jl."
        return 1
    fi
    
    print_msg "$C_CYAN" "üìã El√©rhet≈ë ment√©sek (leg√∫jabb el√∂l):"
    local i=1
    for backup in "${backups[@]}"; do
        local size=$(du -h "$backup" | cut -f1)
        local timestamp_part=$(basename "$(dirname "$backup")" | sed 's/backup_//')
        local date_part=$(echo "$timestamp_part" | cut -d'_' -f1)
        local time_part=$(echo "$timestamp_part" | cut -d'_' -f2 | sed 's/\(..\)/\1:/g; s/:$//')
        echo "  $i) $backup (M√©ret: $size, D√°tum: $date_part $time_part)"
        ((i++))
    done
    
    read -rp "V√°lassza ki a vissza√°ll√≠tand√≥ ment√©s sorsz√°m√°t: " restore_choice
    
    if ! [[ "$restore_choice" =~ ^[0-9]+$ ]] || [ "$restore_choice" -lt 1 ] || [ "$restore_choice" -gt ${#backups[@]} ]; then
        print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s."
        return 1
    fi
    
    local selected_backup="${backups[$((restore_choice-1))]}"
    
    print_msg "$C_YELLOW" "‚ö†Ô∏è  FIGYELEM: A **${selected_backup}** ment√©s fel√ºl√≠rja az √ñSSZES adatb√°zist!"
    read -rp "Biztosan folytatja? (i/n): " confirm_restore
    
    if [[ "$confirm_restore" =~ ^[iI](gen)?$ ]]; then
        get_root_password_if_needed
        if [ $? -ne 0 ]; then
            print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. A vissza√°ll√≠t√°s megszak√≠tva."
            return 1
        fi
        
        print_msg "$C_CYAN" "üîÑ Adatb√°zis vissza√°ll√≠t√°sa folyamatban: $selected_backup"
        if mysql -u root -p"${MARIADB_ROOT_PASSWORD}" --force < "$selected_backup" 2>/dev/null; then
            print_msg "$C_GREEN" "‚úÖ Adatb√°zis sikeresen vissza√°ll√≠tva!"
        else
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a vissza√°ll√≠t√°s sor√°n."
        fi
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  Vissza√°ll√≠t√°s megszak√≠tva."
    fi
    
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 8. MENT√âSEK KEZEL√âSE
function manage_backups() {
    print_msg "$C_BLUE" "## 8. Ment√©sek kezel√©se ##"
    
    while true; do
        echo -e "\n--- Ment√©sek Kezel√©se Almen√º ---"
        echo "1. Ment√©sek list√°z√°sa"
        echo "2. R√©gi ment√©si k√∂nyvt√°rak t√∂rl√©se (7 napn√°l r√©gebbiek)"
        echo "3. Vissza a f≈ëmen√ºbe"
        read -rp "V√°laszt√°s (1-3): " backup_choice

        case $backup_choice in
            1)
                if [ -d "$BACKUP_DIR_BASE" ]; then
                    echo -e "\nüìã Ment√©sek list√°ja ($BACKUP_DIR_BASE):"
                    find "$BACKUP_DIR_BASE" -type d -name "backup_*" -prune -exec du -sh {} \; | sort -r | while read line; do
                        local size=$(echo "$line" | awk '{print $1}')
                        local dir_path=$(echo "$line" | awk '{print $2}')
                        local dir_name=$(basename "$dir_path")
                        local timestamp_part=$(echo "$dir_name" | sed 's/backup_//')
                        local date_part=$(echo "$timestamp_part" | cut -d'_' -f1)
                        local time_part=$(echo "$timestamp_part" | cut -d'_' -f2 | sed 's/\(..\)/\1:/g; s/:$//')
                        echo "üìç $dir_path (M√©ret: $size, D√°tum: $date_part $time_part)"
                    done
                else
                    print_msg "$C_YELLOW" "‚ÑπÔ∏è  Nincsenek ment√©sek."
                fi
                press_enter_to_continue
                ;;
            2)
                print_msg "$C_YELLOW" "üóëÔ∏è  7 napn√°l r√©gebbi ment√©si k√∂nyvt√°rak t√∂rl√©se ($BACKUP_DIR_BASE)..."
                find "$BACKUP_DIR_BASE" -type d -name "backup_*" -mtime +7 -exec rm -rf {} \;
                print_msg "$C_GREEN" "‚úÖ R√©gi ment√©sek t√∂rl√©se befejez≈ëd√∂tt."
                press_enter_to_continue
                ;;
            3) break ;;
            *) print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s." ;;
        esac
    done
}

# --------------------------------------------------------------------------------------------------

## 9. RENDSZER INFORM√ÅCI√ìK
function system_info() {
    print_msg "$C_BLUE" "## 9. Rendszer inform√°ci√≥k ##"
    
    get_os_info
    echo -e "\nüìä Alapvet≈ë inform√°ci√≥k:"
    echo "  Oper√°ci√≥s rendszer: $OS_NAME $OS_VERSION"
    echo "  Hostn√©v: $(hostname)"
    echo "  IP c√≠m: $(hostname -I | awk '{print $1}')"
    
    echo -e "\nüîß Szolg√°ltat√°sok √°llapota:"
    systemctl is-active --quiet apache2 && echo "  ‚úÖ Apache2: fut" || echo "  ‚ùå Apache2: nem fut"
    systemctl is-active --quiet mariadb && echo "  ‚úÖ MariaDB: fut" || echo "  ‚ùå MariaDB: nem fut"
    
    echo -e "\nüíæ Adatb√°zis inform√°ci√≥k:"
    if command_exists mysql && systemctl is-active --quiet mariadb; then
        get_root_password_if_needed
        if [ $? -eq 0 ]; then
            echo "  MariaDB verzi√≥: $(mysql -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT VERSION();" 2>/dev/null | tail -1)"
        fi
    fi
    
    echo -e "\nüìÅ Ment√©sek helye: $BACKUP_DIR_BASE"
    if [ -d "$BACKUP_DIR_BASE" ]; then
        local backup_count=$(find "$BACKUP_DIR_BASE" -type d -name "backup_*" | wc -l)
        echo "  Ment√©sek sz√°ma: $backup_count"
    else
        echo "  Ment√©sek sz√°ma: 0"
    fi
    
    # phpMyAdmin √°llapot
    echo -e "\nüåê phpMyAdmin √°llapot:"
    if [ -d "/usr/share/phpmyadmin" ]; then
        echo "  ‚úÖ phpMyAdmin: telep√≠tve"
        if [ -f "$PHPMYADMIN_CONFIG" ]; then
            echo "  ‚úÖ Konfigur√°ci√≥: OK"
        else
            echo "  ‚ö†Ô∏è  Konfigur√°ci√≥: hi√°nyz√≥"
        fi
    else
        echo "  ‚ùå phpMyAdmin: nincs telep√≠tve"
    fi
    
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 10. PHPMYADMIN BE√ÅLL√çT√ÅST√ÅROL√ì JAV√çT√ÅS
function fix_phpmyadmin_storage() {
    print_msg "$C_BLUE" "## 10. phpMyAdmin Be√°ll√≠t√°st√°rol√≥ Jav√≠t√°sa ##"
    
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥. A jav√≠t√°s megszak√≠tva."
        return 1
    fi
    
    print_msg "$C_CYAN" "üîß phpMyAdmin be√°ll√≠t√°st√°rol√≥ konfigur√°l√°sa..."
    configure_phpmyadmin_storage
    
    # Apache √∫jraind√≠t√°sa
    systemctl restart apache2
    print_msg "$C_GREEN" "‚úÖ phpMyAdmin be√°ll√≠t√°st√°rol√≥ jav√≠tva √©s Apache √∫jraind√≠tva."
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 11. PHPMYADMIN HOZZ√ÅF√âR√âSI HIBA AZONNALI JAV√çT√ÅSA
function fix_phpmyadmin_access() {
    print_msg "$C_ORANGE" "## 11. phpMyAdmin Hozz√°f√©r√©si Hiba Azonnali Jav√≠t√°sa ##"
    print_msg "$C_ORANGE" "   (Access denied for user 'phpmyadmin'@'localhost') ##"
    
    # Root jelsz√≥ ellen≈ërz√©se
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥. A jav√≠t√°s megszak√≠tva."
        return 1
    fi

    print_msg "$C_ORANGE" "üîß phpMyAdmin hozz√°f√©r√©si probl√©ma jav√≠t√°sa..."
    
    # 1. Kapcsol√≥d√°si teszt
    print_msg "$C_CYAN" "üîç Kapcsol√≥d√°s tesztel√©se..."
    if ! mysql -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;" &>/dev/null; then
        print_msg "$C_RED" "‚ùå Nem siker√ºlt csatlakozni a MariaDB-hez a megadott jelsz√≥val."
        return 1
    fi

    print_msg "$C_GREEN" "‚úÖ Sikeres kapcsol√≥d√°s a MariaDB-hez."

    # 2. phpmyadmin felhaszn√°l√≥ jav√≠t√°sa
    print_msg "$C_CYAN" "üë§ phpmyadmin felhaszn√°l√≥ jav√≠t√°sa..."

    # Ellen≈ërizz√ºk, hogy l√©tezik-e a felhaszn√°l√≥
    USER_EXISTS=$(mysql -u root -p"${MARIADB_ROOT_PASSWORD}" -sN -e "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = 'phpmyadmin' AND host = 'localhost');")

    if [ "$USER_EXISTS" -eq 1 ]; then
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  phpmyadmin felhaszn√°l√≥ m√°r l√©tezik, jelsz√≥ vissza√°ll√≠t√°sa..."
        mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF
ALTER USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'phpmyadmin';
FLUSH PRIVILEGES;
EOF
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  phpmyadmin felhaszn√°l√≥ l√©trehoz√°sa..."
        mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF
CREATE USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'phpmyadmin';
GRANT ALL PRIVILEGES ON *.* TO 'phpmyadmin'@'localhost' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EOF
    fi

    # 3. Konfigur√°ci√≥s f√°jl jav√≠t√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Konfigur√°ci√≥s f√°jl jav√≠t√°sa..."

    if [ -f "$PHPMYADMIN_CONFIG" ]; then
        # Biztons√°gi ment√©s
        cp "$PHPMYADMIN_CONFIG" "${PHPMYADMIN_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
        
        # Control user be√°ll√≠t√°sok hozz√°ad√°sa/m√≥dos√≠t√°sa
        if grep -q "controluser" "$PHPMYADMIN_CONFIG"; then
            sed -i "s/\$cfg\['Servers'\]\[\$i\]\['controluser'\].*/\$cfg\['Servers'\]\[\$i\]\['controluser'\] = 'phpmyadmin';/" "$PHPMYADMIN_CONFIG"
            sed -i "s/\$cfg\['Servers'\]\[\$i\]\['controlpass'\].*/\$cfg\['Servers'\]\[\$i\]\['controlpass'\] = 'phpmyadmin';/" "$PHPMYADMIN_CONFIG"
        else
            cat >> "$PHPMYADMIN_CONFIG" <<'EOF'

/* phpMyAdmin hozz√°f√©r√©si hiba jav√≠t√°s - Automatikus be√°ll√≠t√°s */
$cfg['Servers'][$i]['controlhost'] = 'localhost';
$cfg['Servers'][$i]['controluser'] = 'phpmyadmin';
$cfg['Servers'][$i]['controlpass'] = 'phpmyadmin';
EOF
        fi
        print_msg "$C_GREEN" "‚úÖ Konfigur√°ci√≥s f√°jl jav√≠tva."
    else
        print_msg "$C_RED" "‚ùå phpMyAdmin konfigur√°ci√≥s f√°jl nem tal√°lhat√≥."
    fi

    # 4. Jogosults√°gok be√°ll√≠t√°sa
    print_msg "$C_CYAN" "üîê Jogosults√°gok be√°ll√≠t√°sa..."
    mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF
GRANT ALL PRIVILEGES ON phpmyadmin.* TO 'phpmyadmin'@'localhost';
FLUSH PRIVILEGES;
EOF

    print_msg "$C_GREEN" "‚úÖ Jogosults√°gok be√°ll√≠tva."

    # 5. Apache √∫jraind√≠t√°sa
    print_msg "$C_CYAN" "üîÑ Apache √∫jraind√≠t√°sa..."
    systemctl restart apache2

    print_msg "$C_GREEN" "‚úÖ Apache √∫jraind√≠tva."

    # 6. V√©geredm√©ny
    echo
    print_msg "$C_ORANGE" "================================================="
    print_msg "$C_GREEN" "‚úÖ HOZZ√ÅF√âR√âSI HIBA JAV√çTVA!"
    print_msg "$C_CYAN" "üìã Elv√©gzett m≈±veletek:"
    print_msg "$C_CYAN" "   ‚úì phpmyadmin felhaszn√°l√≥ l√©trehozva/jav√≠tva"
    print_msg "$C_CYAN" "   ‚úì Jelsz√≥ be√°ll√≠tva: 'phpmyadmin'"
    print_msg "$C_CYAN" "   ‚úì Konfigur√°ci√≥s f√°jl friss√≠tve"
    print_msg "$C_CYAN" "   ‚úì Jogosults√°gok be√°ll√≠tva"
    print_msg "$C_CYAN" "   ‚úì Apache √∫jraind√≠tva"
    print_msg "$C_ORANGE" "================================================="
    echo
    print_msg "$C_YELLOW" "üåê Most pr√≥b√°lja meg √∫jra megnyitni a phpMyAdmin-t:"
    print_msg "$C_CYAN" "   http://$(hostname -I | awk '{print $1}')/phpmyadmin"
    echo
    print_msg "$C_YELLOW" "üîê Bejelentkez√©si adatok:"
    print_msg "$C_CYAN" "   Felhaszn√°l√≥n√©v: phpmyadmin"
    print_msg "$C_CYAN" "   Jelsz√≥: phpmyadmin"
    echo
    print_msg "$C_RED" "‚ö†Ô∏è  FONTOS: Biztons√°gi okokb√≥l v√°ltoztassa meg a jelsz√≥t!"
    print_msg "$C_ORANGE" "================================================="

    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## F≈êMEN√ú - Ubuntu Edition
function main_menu() {
    while true; do
        clear
        get_os_info
        echo -e "${C_BLUE}====================================================="
        echo -e "      MariaDB Telep√≠t≈ë √©s Kezel≈ë Script (v4.4)"
        echo -e "            UBUNTU EDITION - $OS_NAME $OS_VERSION"
        echo -e "          (Be√°ll√≠t√°st√°rol√≥ + Hozz√°f√©r√©si fix)"
        echo -e "=====================================================${C_RESET}"
        echo -e "${C_YELLOW}--- Telep√≠t√©s √©s Konfigur√°ci√≥ ---${C_RESET}"
        echo "1. Apache2 webszerver telep√≠t√©se"
        echo "2. phpMyAdmin Telep√≠t√©se (Be√°ll√≠t√°st√°rol√≥ fix-szel)"
        echo "3. MariaDB szerver telep√≠t√©se"
        echo "4. Hozz√°f√©r√©s Be√°ll√≠t√°sa (Root jelsz√≥, T√°voli el√©r√©s, T≈±zfal)"
        echo -e "${C_YELLOW}--- Adatb√°zis Kezel√©s ---${C_RESET}"
        echo "5. Felhaszn√°l√≥- √©s Jogosults√°gkezel√©s"
        echo "6. Adatb√°zis ment√©se (WDB form√°tum)"
        echo "7. Adatb√°zis vissza√°ll√≠t√°sa"
        echo "8. Ment√©sek kezel√©se"
        echo -e "${C_ORANGE}--- Jav√≠t√°sok √©s Ellen≈ërz√©sek ---${C_RESET}"
        echo "9. Rendszer inform√°ci√≥k"
        echo "10. phpMyAdmin be√°ll√≠t√°st√°rol√≥ jav√≠t√°sa"
        echo "11. üö® phpMyAdmin hozz√°f√©r√©si hiba jav√≠t√°sa"
        echo -e "${C_YELLOW}--- Egy√©b ---${C_RESET}"
        echo "0. Kil√©p√©s"
        echo -e "${C_BLUE}=====================================================${C_RESET}"
        read -rp "V√°laszt√°s (0-11): " choice

        case $choice in
            1) setup_apache ;;
            2) install_phpmyadmin_apache ;;
            3) install_mariadb ;;
            4) configure_access ;;
            5) user_management ;;
            6) backup_database ;;
            7) restore_database ;;
            8) manage_backups ;;
            9) system_info ;;
            10) fix_phpmyadmin_storage ;;
            11) fix_phpmyadmin_access ;;
            0) echo -e "${C_GREEN}Viszl√°t! üëã${C_RESET}"; exit 0 ;;
            *) print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s."; press_enter_to_continue ;;
        esac
    done
}

# --- Szkript ind√≠t√°sa ---
check_root

# Repository probl√©m√°k ellen≈ërz√©se indul√°skor
print_msg "$C_CYAN" "üîç Repository probl√©m√°k ellen≈ërz√©se..."
fix_mariadb_repository

main_menu
