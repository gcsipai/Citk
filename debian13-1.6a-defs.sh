#!/bin/bash

# Ellen≈ërizz√ºk, hogy a szkript root felhaszn√°l√≥k√©nt fut-e
if [ "$EUID" -ne 0 ]; then
    echo -e "\033[1;31m‚ö†Ô∏è Ez a szkript root jogosults√°gokat ig√©nyel. K√©rj√ºk, futtassa 'sudo' vagy 'su' haszn√°lat√°val.\033[0m"
    exit 1
fi

# Debian sz√≠nek
DEBIAN_RED="\033[1;31m"
DEBIAN_GREEN="\033[1;32m"
DEBIAN_BLUE="\033[1;34m"
DEBIAN_YELLOW="\033[1;33m"
DEBIAN_PURPLE="\033[1;35m"
DEBIAN_CYAN="\033[1;36m"
DEBIAN_WHITE="\033[1;37m"
DEBIAN_RESET="\033[0m"

# A szkript interakt√≠v men√ºj√©nek megjelen√≠t√©se
show_main_menu() {
    clear
    echo -e "${DEBIAN_RED}=========================================${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}Debian 13 Be√°ll√≠t√≥ Szkript 1.6a Citk 2025${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}=========================================${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}1. Csomagforr√°sok konfigur√°l√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}2. Rendszer friss√≠t√©se (apt update & upgrade)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}3. Alapvet≈ë alkalmaz√°sok telep√≠t√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}4. H√°l√≥zati be√°ll√≠t√°sok (NetworkManager)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}5. Id≈ëz√≥na √©s NTP be√°ll√≠t√°sok${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}6. Hostn√©v √©s FQDN be√°ll√≠t√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}7. Felhaszn√°l√≥kezel√©s${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}8. SSH root bejelentkez√©s enged√©lyez√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}9. Rendszeradatok list√°z√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}10. Cockpit telep√≠t√©se √©s be√°ll√≠t√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}11. SSH bejelentkez≈ë sz√∂veg szerkeszt√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}12. Kil√©p√©s${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}=========================================${DEBIAN_RESET}"
    read -p "V√°lassz egy opci√≥t: " choice
}

# --- Seg√©dfunkci√≥k ---

# Ellen≈ërzi √©s hozz√°adja a trixie rep√≥kat
check_and_configure_trixie_repos() {
    if ! grep -q "trixie main" /etc/apt/sources.list; then
        echo -e "${DEBIAN_YELLOW}‚öôÔ∏è A sources.list f√°jl hi√°nyos vagy hib√°s. Hozz√°adjuk a 'trixie' rep√≥kat a teljes funkcionalit√°s √©rdek√©ben.${DEBIAN_RESET}"
        configure_repos
        echo -e "${DEBIAN_BLUE}Csomaglista friss√≠t√©se...${DEBIAN_RESET}"
        apt update
        echo -e "${DEBIAN_GREEN}‚úÖ A csomaglista friss√≠t√©se sikeres.${DEBIAN_RESET}"
    fi
}

# --- Id≈ëz√≥na √©s NTP funkci√≥k ---

# Id≈ëz√≥na be√°ll√≠t√°sa
configure_timezone() {
    echo -e "${DEBIAN_BLUE}üåç Id≈ëz√≥na be√°ll√≠t√°sa${DEBIAN_RESET}"
    
    # Jelenlegi id≈ëz√≥na megjelen√≠t√©se
    echo -e "${DEBIAN_CYAN}Jelenlegi id≈ëz√≥na:${DEBIAN_RESET}"
    timedatectl status
    
    # Id≈ëz√≥na lista megjelen√≠t√©se
    echo -e "${DEBIAN_CYAN}El√©rhet≈ë id≈ëz√≥n√°k (Eur√≥pa/Budapest aj√°nlott):${DEBIAN_RESET}"
    timedatectl list-timezones | grep -E "Europe|UTC" | head -20
    
    read -p "Add meg az √∫j id≈ëz√≥n√°t (pl. Europe/Budapest): " timezone
    
    if timedatectl set-timezone "$timezone"; then
        echo -e "${DEBIAN_GREEN}‚úÖ Id≈ëz√≥na be√°ll√≠tva: $timezone${DEBIAN_RESET}"
    else
        echo -e "${DEBIAN_RED}‚ùå Hiba az id≈ëz√≥na be√°ll√≠t√°sa sor√°n.${DEBIAN_RESET}"
    fi
    
    echo -e "${DEBIAN_CYAN}Friss id≈ëz√≥na inform√°ci√≥k:${DEBIAN_RESET}"
    timedatectl status
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NTP be√°ll√≠t√°sa magyar szerverekkel
configure_ntp() {
    echo -e "${DEBIAN_BLUE}‚è∞ NTP (id≈ëszinkroniz√°ci√≥) be√°ll√≠t√°sa${DEBIAN_RESET}"
    
    # Ellen≈ërizz√ºk, hogy systemd-timesyncd fut-e
    if systemctl is-active systemd-timesyncd >/dev/null 2>&1; then
        echo -e "${DEBIAN_CYAN}Jelenlegi NTP be√°ll√≠t√°sok:${DEBIAN_RESET}"
        timedatectl timesync-status
        
        echo -e "${DEBIAN_YELLOW}‚ö†Ô∏è Magyar NTP szerverek be√°ll√≠t√°sa...${DEBIAN_RESET}"
        
        # timesyncd konfigur√°ci√≥j√°nak m√≥dos√≠t√°sa
        cat <<EOF > /etc/systemd/timesyncd.conf
[Time]
# Magyar NTP szerverek
NTP=ntp.bme.hu time.kfki.hu pool.ntp.org
FallbackNTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org
RootDistanceMaxSec=5
PollIntervalMinSec=32
PollIntervalMaxSec=2048
EOF
        
        # Szolg√°ltat√°s √∫jraind√≠t√°sa
        systemctl daemon-reload
        systemctl restart systemd-timesyncd
        systemctl enable systemd-timesyncd
        
        echo -e "${DEBIAN_GREEN}‚úÖ NTP szerverek be√°ll√≠tva: ntp.bme.hu, time.kfki.hu${DEBIAN_RESET}"
        
        # V√°rjunk egy kicsit, majd ellen≈ërizz√ºk
        sleep 3
        echo -e "${DEBIAN_CYAN}Friss NTP √°llapot:${DEBIAN_RESET}"
        timedatectl timesync-status
    else
        echo -e "${DEBIAN_RED}‚ùå A systemd-timesyncd szolg√°ltat√°s nem akt√≠v.${DEBIAN_RESET}"
    fi
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# K√©zi id≈ë be√°ll√≠t√°sa
set_manual_time() {
    echo -e "${DEBIAN_BLUE}üïê K√©zi d√°tum √©s id≈ë be√°ll√≠t√°sa${DEBIAN_RESET}"
    
    echo -e "${DEBIAN_CYAN}Jelenlegi d√°tum √©s id≈ë:${DEBIAN_RESET}"
    date
    
    read -p "Add meg az √∫j d√°tumot (√â√â√â√â-HH-NN form√°tumban, pl. 2025-01-15): " new_date
    read -p "Add meg az √∫j id≈ët (√ì√ì:PP:MM form√°tumban, pl. 14:30:00): " new_time
    
    if [ -n "$new_date" ] && [ -n "$new_time" ]; then
        if timedatectl set-time "${new_date} ${new_time}"; then
            echo -e "${DEBIAN_GREEN}‚úÖ D√°tum √©s id≈ë be√°ll√≠tva: ${new_date} ${new_time}${DEBIAN_RESET}"
        else
            echo -e "${DEBIAN_RED}‚ùå Hiba a d√°tum √©s id≈ë be√°ll√≠t√°sa sor√°n.${DEBIAN_RESET}"
        fi
    else
        echo -e "${DEBIAN_YELLOW}‚ö†Ô∏è D√°tum √©s id≈ë megad√°sa k√∂telez≈ë.${DEBIAN_RESET}"
    fi
    
    echo -e "${DEBIAN_CYAN}Friss d√°tum √©s id≈ë:${DEBIAN_RESET}"
    date
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NTP szolg√°ltat√°s √°llapot√°nak ellen≈ërz√©se
check_ntp_status() {
    echo -e "${DEBIAN_BLUE}üìä NTP szolg√°ltat√°s √°llapot√°nak ellen≈ërz√©se${DEBIAN_RESET}"
    
    echo -e "${DEBIAN_CYAN}Timedatectl √°llapot:${DEBIAN_RESET}"
    timedatectl status
    
    echo -e "${DEBIAN_CYAN}NTP szinkroniz√°ci√≥s √°llapot:${DEBIAN_RESET}"
    if systemctl is-active systemd-timesyncd >/dev/null 2>&1; then
        timedatectl timesync-status --no-pager
    else
        echo -e "${DEBIAN_RED}‚ùå A systemd-timesyncd szolg√°ltat√°s nem fut.${DEBIAN_RESET}"
    fi
    
    echo -e "${DEBIAN_CYAN}Aktu√°lis NTP kapcsolatok:${DEBIAN_RESET}"
    ss -tuln | grep :123 || echo -e "${DEBIAN_YELLOW}Nincs akt√≠v NTP kapcsolat.${DEBIAN_RESET}"
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Id≈ëbe√°ll√≠t√°si men√º
show_time_menu() {
    clear
    echo -e "${DEBIAN_BLUE}--- Id≈ëz√≥na √©s NTP Be√°ll√≠t√°sok ---${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}1. Id≈ëz√≥na be√°ll√≠t√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}2. NTP be√°ll√≠t√°sa magyar szerverekkel${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}3. K√©zi d√°tum √©s id≈ë be√°ll√≠t√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}4. NTP √°llapot ellen≈ërz√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}5. Vissza a f≈ëmen√ºbe${DEBIAN_RESET}"
    echo -e "${DEBIAN_BLUE}-----------------------------------${DEBIAN_RESET}"
    read -p "V√°lassz egy id≈ëbe√°ll√≠t√°si opci√≥t: " time_choice

    case $time_choice in
        1) configure_timezone ;;
        2) configure_ntp ;;
        3) set_manual_time ;;
        4) check_ntp_status ;;
        5) return ;;
        *) echo -e "${DEBIAN_RED}√ârv√©nytelen v√°laszt√°s.${DEBIAN_RESET}"; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
}

# --- Csomagkezel√©si √©s telep√≠t√©si funkci√≥k ---

# Csomagforr√°sok konfigur√°l√°sa
configure_repos() {
    echo -e "${DEBIAN_BLUE}‚öôÔ∏è Csomagforr√°sok konfigur√°l√°sa...${DEBIAN_RESET}"
    
    # Elt√°vol√≠tjuk a r√©gi rep√≥kat, √©s hozz√°adjuk a Debian 13 "trixie" rep√≥kat
    cp /etc/apt/sources.list /etc/apt/sources.list.bak
    
    cat <<EOF > /etc/apt/sources.list
deb http://deb.debian.org/debian/ trixie main contrib non-free non-free-firmware
deb http://deb.debian.org/debian/ trixie-updates main contrib non-free non-free-firmware
deb http://deb.debian.org/debian-security/ trixie-security main contrib non-free non-free-firmware
EOF
    
    echo -e "${DEBIAN_GREEN}‚úÖ Csomagforr√°sok sikeresen konfigur√°lva 'trixie'-re.${DEBIAN_RESET}"
    echo -e "${DEBIAN_YELLOW}Most friss√≠teni kell a csomaglist√°t az √∫j be√°ll√≠t√°sok √©rv√©nybel√©p√©s√©hez.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Rendszer friss√≠t√©se
update_system() {
    check_and_configure_trixie_repos
    echo -e "${DEBIAN_BLUE}üîÑ Rendszer friss√≠t√©se...${DEBIAN_RESET}"
    apt update
    apt upgrade -y
    echo -e "${DEBIAN_GREEN}‚úÖ A rendszer naprak√©sz.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Alapvet≈ë alkalmaz√°sok telep√≠t√©se
install_basic_apps() {
    check_and_configure_trixie_repos
    echo -e "${DEBIAN_BLUE}üöÄ Alapvet≈ë alkalmaz√°sok telep√≠t√©se: mc, unzip, zip, htop, bpytop, curl...${DEBIAN_RESET}"
    apt update
    if ! apt install -y mc unzip zip htop bpytop curl; then
        echo -e "${DEBIAN_RED}‚ùå Hiba az alapvet≈ë alkalmaz√°sok telep√≠t√©se sor√°n.${DEBIAN_RESET}"
        read -p "Nyomj Entert a folytat√°shoz..."
        return
    fi
    echo -e "${DEBIAN_GREEN}‚úÖ Az alkalmaz√°sok sikeresen telep√≠tve.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- H√°l√≥zati funkci√≥k (NetworkManager alap√∫) ---

install_network_dependencies() {
    check_and_configure_trixie_repos
    echo -e "${DEBIAN_BLUE}üöÄ A sz√ºks√©ges h√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se: network-manager, net-tools, ifenslave, vlan...${DEBIAN_RESET}"
    
    apt update
    if ! apt install -y network-manager net-tools ifenslave vlan; then
        echo -e "${DEBIAN_RED}‚ùå Hiba a h√°l√≥zati csomagok telep√≠t√©se sor√°n.${DEBIAN_RESET}"
        read -p "Nyomj Entert a folytat√°shoz..."
        return
    fi
    
    echo -e "${DEBIAN_YELLOW}üîÑ A hagyom√°nyos 'ifupdown' √©s 'systemd-networkd' rendszer letilt√°sa...${DEBIAN_RESET}"
    systemctl stop networking 2>/dev/null || true
    systemctl disable networking 2>/dev/null || true
    systemctl mask networking
    
    systemctl stop systemd-networkd 2>/dev/null || true
    systemctl disable systemd-networkd 2>/dev/null || true
    systemctl mask systemd-networkd

    echo -e "${DEBIAN_GREEN}‚úÖ A NetworkManager enged√©lyez√©se √©s ind√≠t√°sa...${DEBIAN_RESET}"
    systemctl unmask NetworkManager
    systemctl enable --now NetworkManager
    
    echo -e "${DEBIAN_BLUE}‚öôÔ∏è NetworkManager konfigur√°ci√≥ be√°ll√≠t√°sa managed=true-ra...${DEBIAN_RESET}"
    if [ -f "/etc/NetworkManager/NetworkManager.conf" ]; then
        if ! grep -q "managed=true" /etc/NetworkManager/NetworkManager.conf; then
            sed -i 's/managed=false/managed=true/' /etc/NetworkManager/NetworkManager.conf
        fi
    fi

    echo -e "${DEBIAN_BLUE}‚öôÔ∏è /etc/network/interfaces f√°jl megtiszt√≠t√°sa a konfliktusok elker√ºl√©se √©rdek√©ben...${DEBIAN_RESET}"
    if [ -f "/etc/network/interfaces" ]; then
        cp /etc/network/interfaces /etc/network/interfaces.backup
        cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
EOF
        echo -e "${DEBIAN_GREEN}‚úÖ interfaces f√°jl megtiszt√≠tva.${DEBIAN_RESET}"
    fi

    echo -e "${DEBIAN_GREEN}‚úÖ A h√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se √©s a NetworkManager konfigur√°l√°sa befejez≈ëd√∂tt.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NetworkManager probl√©m√°k jav√≠t√°sa
fix_network_manager_issues() {
    echo -e "${DEBIAN_BLUE}üîß NetworkManager probl√©m√°k diagnosztiz√°l√°sa √©s jav√≠t√°sa...${DEBIAN_RESET}"
    echo -e "${DEBIAN_CYAN}1. NetworkManager szolg√°ltat√°s ellen≈ërz√©se...${DEBIAN_RESET}"
    systemctl status NetworkManager --no-pager -l
    
    echo -e "\n${DEBIAN_CYAN}2. H√°l√≥zati interf√©szek √°llapota:${DEBIAN_RESET}"
    nmcli device status
    
    echo -e "\n${DEBIAN_CYAN}3. /etc/network/interfaces f√°jl ellen≈ërz√©se:${DEBIAN_RESET}"
    if [ -f "/etc/network/interfaces" ]; then
        cat /etc/network/interfaces
        read -p "Szeretn√©d megtiszt√≠tani az interfaces f√°jlt? (y/n): " clean_interfaces
        if [[ "$clean_interfaces" == "y" || "$clean_interfaces" == "Y" ]]; then
            cp /etc/network/interfaces /etc/network/interfaces.backup
            cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
EOF
            echo -e "${DEBIAN_GREEN}‚úÖ interfaces f√°jl megtiszt√≠tva${DEBIAN_RESET}"
        fi
    fi
    
    echo -e "\n${DEBIAN_CYAN}4. NetworkManager konfigur√°ci√≥ ellen≈ërz√©se:${DEBIAN_RESET}"
    if [ -f "/etc/NetworkManager/NetworkManager.conf" ]; then
        cat /etc/NetworkManager/NetworkManager.conf
        if ! grep -q "managed=true" /etc/NetworkManager/NetworkManager.conf; then
            echo -e "${DEBIAN_YELLOW}‚ö†Ô∏è NetworkManager nincs managed m√≥dban${DEBIAN_RESET}"
            read -p "Szeretn√©d be√°ll√≠tani managed=true-ra? (y/n): " set_managed
            if [[ "$set_managed" == "y" || "$set_managed" == "Y" ]]; then
                sed -i 's/managed=false/managed=true/' /etc/NetworkManager/NetworkManager.conf
                echo -e "${DEBIAN_GREEN}‚úÖ NetworkManager be√°ll√≠tva managed=true-ra${DEBIAN_RESET}"
            fi
        fi
    fi
    
    echo -e "\n${DEBIAN_BLUE}5. NetworkManager √∫jraind√≠t√°sa...${DEBIAN_RESET}"
    systemctl restart NetworkManager
    sleep 3
    
    echo -e "\n${DEBIAN_CYAN}6. V√©gleges √°llapot ellen≈ërz√©se:${DEBIAN_RESET}"
    nmcli device status
    
    echo -e "\n${DEBIAN_GREEN}‚úÖ NetworkManager probl√©majav√≠t√°s befejezve${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NetworkManager konfigur√°ci√≥s f√°jlok jav√≠t√°sa
fix_nm_config_files() {
    echo -e "${DEBIAN_BLUE}üîß NetworkManager konfigur√°ci√≥s f√°jlok jav√≠t√°sa...${DEBIAN_RESET}"
    
    echo -e "${DEBIAN_CYAN}1. Netplan konfliktusok ellen≈ërz√©se √©s elt√°vol√≠t√°sa...${DEBIAN_RESET}"
    if [ -d "/etc/netplan/" ]; then
        echo -e "${DEBIAN_CYAN}Netplan f√°jlok a /etc/netplan/ k√∂nyvt√°rban:${DEBIAN_RESET}"
        ls -la /etc/netplan/
        
        conflicting_files=$(find /etc/netplan/ -name "*.yaml" -o -name "*.yml" 2>/dev/null || true)
        
        if [ -n "$conflicting_files" ]; then
            echo -e "${DEBIAN_YELLOW}‚ö†Ô∏è Netplan konfliktusok tal√°lhat√≥k: $conflicting_files${DEBIAN_RESET}"
            read -p "Szeretn√©d biztons√°gi m√°solatot k√©sz√≠teni √©s elt√°vol√≠tani ezeket? (y/n): " remove_netplan
            if [[ "$remove_netplan" == "y" || "$remove_netplan" == "Y" ]]; then
                for file in $conflicting_files; do
                    backup_file="${file}.backup"
                    cp "$file" "$backup_file"
                    echo -e "${DEBIAN_GREEN}‚úÖ $file biztons√°gi m√°solat k√©sz√≠tve: $backup_file${DEBIAN_RESET}"
                    rm "$file"
                    echo -e "${DEBIAN_GREEN}‚úÖ $file elt√°vol√≠tva${DEBIAN_RESET}"
                done
                netplan apply
            fi
        else
            echo -e "${DEBIAN_GREEN}‚úÖ Nincsenek Netplan konfliktusok${DEBIAN_RESET}"
        fi
    fi
    
    echo -e "\n${DEBIAN_CYAN}2. NetworkManager kapcsolati f√°jlok t√∂rl√©se...${DEBIAN_RESET}"
    read -p "Szeretn√©d elt√°vol√≠tani az √∂sszes NetworkManager kapcsolati f√°jlt? Ez √∫jrakonfigur√°l√°st ig√©nyel! (y/n): " remove_nm_files
    if [[ "$remove_nm_files" == "y" || "$remove_nm_files" == "Y" ]]; then
        rm -f /etc/NetworkManager/system-connections/*
        echo -e "${DEBIAN_GREEN}‚úÖ √ñsszes kapcsolati f√°jl elt√°vol√≠tva.${DEBIAN_RESET}"
    fi
    
    echo -e "\n${DEBIAN_BLUE}3. NetworkManager √∫jraind√≠t√°sa...${DEBIAN_RESET}"
    systemctl restart NetworkManager
    sleep 3
    
    echo -e "\n${DEBIAN_GREEN}‚úÖ Konfigur√°ci√≥s f√°jlok jav√≠t√°sa befejez≈ëd√∂tt.${DEBIAN_RESET}"
    echo -e "${DEBIAN_YELLOW}Most hozz l√©tre √∫j kapcsolatokat az nmtui vagy nmcli haszn√°lat√°val.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Statikus IP be√°ll√≠t√°sa nmcli-vel
configure_static_ip_nmcli() {
    echo -e "${DEBIAN_BLUE}üîß Statikus IP be√°ll√≠t√°sa a NetworkManager-rel (nmcli)...${DEBIAN_RESET}"
    nmcli device status
    read -p "Add meg a konfigur√°land√≥ h√°l√≥zati interf√©sz nev√©t (pl. eth0 vagy ens33): " interface_name
    read -p "Add meg a kapcsolat nev√©t (pl. 'Static IP'): " connection_name
    
    # Kapcsolat l√©trehoz√°sa
    nmcli connection add type ethernet con-name "$connection_name" ifname "$interface_name"
    
    # Statikus IP be√°ll√≠t√°sa
    echo -e "\n${DEBIAN_CYAN}--- Statikus IP c√≠m be√°ll√≠t√°sa ---${DEBIAN_RESET}"
    read -p "Add meg az IPv4 c√≠met (pl. 192.168.1.100/24): " ip_address
    nmcli connection modify "$connection_name" ipv4.method manual ipv4.addresses "$ip_address"
    
    read -p "Add meg az IPv4 √°tj√°r√≥t (pl. 192.168.1.1): " gateway
    nmcli connection modify "$connection_name" ipv4.gateway "$gateway"
    
    read -p "Add meg a DNS szervereket (sz√≥k√∂zzel elv√°lasztva, pl. 8.8.8.8 8.8.4.4): " dns_servers
    nmcli connection modify "$connection_name" ipv4.dns "$dns_servers"

    # IPv6 letilt√°sa
    nmcli connection modify "$connection_name" ipv6.method disabled

    echo -e "${DEBIAN_GREEN}‚úÖ Statikus IP be√°ll√≠t√°sai elmentve.${DEBIAN_RESET}"
    
    # Kapcsolat aktiv√°l√°sa
    echo -e "\n${DEBIAN_BLUE}üîÑ Kapcsolat aktiv√°l√°sa...${DEBIAN_RESET}"
    nmcli connection up "$connection_name"
    sleep 3
    
    echo -e "\n${DEBIAN_GREEN}‚úÖ A(z) '$connection_name' nev≈± statikus kapcsolat akt√≠v.${DEBIAN_RESET}"
    echo -e "${DEBIAN_CYAN}--- Aktu√°lis h√°l√≥zati be√°ll√≠t√°sok ---${DEBIAN_RESET}"
    ip addr show "$interface_name"
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# H√°l√≥zati napl√≥k megjelen√≠t√©se
show_network_logs() {
    echo -e "${DEBIAN_BLUE}üìã H√°l√≥zati napl√≥k megjelen√≠t√©se...${DEBIAN_RESET}"
    echo -e "${DEBIAN_CYAN}1. NetworkManager napl√≥k (utols√≥ 20 sor):${DEBIAN_RESET}"
    journalctl -u NetworkManager -n 20 --no-pager
    
    echo -e "\n${DEBIAN_CYAN}2. Aktu√°lis h√°l√≥zati konfigur√°ci√≥:${DEBIAN_RESET}"
    ip addr show
    
    echo -e "\n${DEBIAN_CYAN}3. √ötv√°laszt√°si t√°bla:${DEBIAN_RESET}"
    ip route show
    
    echo -e "\n${DEBIAN_CYAN}4. DNS be√°ll√≠t√°sok:${DEBIAN_RESET}"
    cat /etc/resolv.conf
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

show_network_menu() {
    clear
    echo -e "${DEBIAN_BLUE}--- H√°l√≥zati Be√°ll√≠t√°sok (NetworkManager) ---${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}0. H√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se √©s konfigur√°l√°sa (Ezzel kell kezdeni!)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}1. H√°l√≥zati be√°ll√≠t√°s grafikus karakteres fel√ºleten (nmtui)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}2. Statikus IP be√°ll√≠t√°sa (nmcli)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}3. NetworkManager probl√©m√°k jav√≠t√°sa (diagnosztika)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}4. NM konfigur√°ci√≥s f√°jlok jav√≠t√°sa (t√∂rl√©s)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}5. H√°l√≥zati interf√©szek list√°z√°sa (nmcli)${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}6. H√°l√≥zati napl√≥k megjelen√≠t√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}7. Vissza a f≈ëmen√ºbe${DEBIAN_RESET}"
    echo -e "${DEBIAN_BLUE}----------------------------------------------${DEBIAN_RESET}"
    read -p "V√°lassz egy h√°l√≥zati opci√≥t: " net_choice

    case $net_choice in
        0) install_network_dependencies ;;
        1) 
            if command -v nmtui &> /dev/null; then
                nmtui
            else
                echo -e "${DEBIAN_RED}‚ùå Az nmtui nincs telep√≠tve. El≈ësz√∂r telep√≠tsd a h√°l√≥zati f√ºgg≈ës√©geket (0. opci√≥).${DEBIAN_RESET}"
                read -p "Nyomj Entert a folytat√°shoz..."
            fi
            ;;
        2) configure_static_ip_nmcli ;;
        3) fix_network_manager_issues ;;
        4) fix_nm_config_files ;;
        5) 
            echo -e "${DEBIAN_CYAN}--- H√°l√≥zati interf√©szek √°llapota ---${DEBIAN_RESET}"
            nmcli device status
            echo -e "\n${DEBIAN_CYAN}--- R√©szletes interf√©sz inform√°ci√≥k ---${DEBIAN_RESET}"
            ip addr show
            read -p "Nyomj Entert a folytat√°shoz..."
            ;;
        6) show_network_logs ;;
        7) return ;;
        *) echo -e "${DEBIAN_RED}√ârv√©nytelen v√°laszt√°s.${DEBIAN_RESET}"; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
}

# --- Felhaszn√°l√≥kezel√©si funkci√≥k ---

list_users() {
    echo -e "${DEBIAN_CYAN}--- Felhaszn√°l√≥k list√°ja ---${DEBIAN_RESET}"
    awk -F':' '{ print $1}' /etc/passwd | grep -v 'nologin' | grep -v 'false' | grep -v 'sync'
    read -p "Nyomj Entert a folytat√°shoz..."
}

delete_user() {
    read -p "Add meg a t√∂r√∂lni k√≠v√°nt felhaszn√°l√≥ nev√©t: " user_to_delete
    read -p "‚ö†Ô∏è Biztosan t√∂r√∂lni szeretn√©d a(z) '$user_to_delete' felhaszn√°l√≥t √©s a home k√∂nyvt√°r√°t? (y/n): " confirm_delete
    if [[ "$confirm_delete" == "y" || "$confirm_delete" == "Y" ]]; then
        /usr/sbin/userdel -r "$user_to_delete"
        echo -e "${DEBIAN_GREEN}‚úÖ A(z) '$user_to_delete' felhaszn√°l√≥ sikeresen t√∂r√∂lve.${DEBIAN_RESET}"
    else
        echo -e "${DEBIAN_RED}‚ùå Felhaszn√°l√≥ t√∂rl√©se megszak√≠tva.${DEBIAN_RESET}"
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

manage_users() {
    clear
    echo -e "${DEBIAN_BLUE}--- Felhaszn√°l√≥kezel√©s ---${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}1. √öj felhaszn√°l√≥ hozz√°ad√°sa √©s sudo be√°ll√≠t√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}2. Felhaszn√°l√≥k list√°z√°sa${DEBIAN_RESET}"
    echo -e "${DEBIAN_GREEN}3. Felhaszn√°l√≥ t√∂rl√©se${DEBIAN_RESET}"
    echo -e "${DEBIAN_RED}4. Vissza a f≈ëmen√ºbe${DEBIAN_RESET}"
    echo -e "${DEBIAN_BLUE}---------------------------${DEBIAN_RESET}"
    read -p "V√°lassz egy felhaszn√°l√≥kezel√©si opci√≥t: " user_choice
    case $user_choice in
        1) add_user_sudo ;;
        2) list_users ;;
        3) delete_user ;;
        4) return ;;
        *) echo -e "${DEBIAN_RED}√ârv√©nytelen v√°laszt√°s.${DEBIAN_RESET}"; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
}

add_user_sudo() {
    read -p "Add meg az √∫j felhaszn√°l√≥ nev√©t: " new_user
    /usr/sbin/adduser "$new_user"
    /usr/sbin/usermod -aG sudo "$new_user"
    echo -e "${DEBIAN_GREEN}‚úÖ A(z) '$new_user' felhaszn√°l√≥ hozz√°adva √©s a 'sudo' csoporthoz rendelve.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- Egy√©b konfigur√°ci√≥s funkci√≥k ---

# Hostn√©v √©s FQDN be√°ll√≠t√°sa
configure_hostname() {
    read -p "Add meg az √∫j hosztnevet: " new_hostname
    hostnamectl set-hostname "$new_hostname"
    
    if grep -q "127.0.1.1" /etc/hosts; then
        sed -i "s/^127.0.1.1.*$/127.0.1.1\t$new_hostname.local\t$new_hostname/" /etc/hosts
    else
        echo -e "127.0.1.1\t$new_hostname.local\t$new_hostname" | tee -a /etc/hosts > /dev/null
    fi
    echo -e "${DEBIAN_GREEN}‚úÖ Hostn√©v be√°ll√≠tva: $new_hostname${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# SSH root bejelentkez√©s enged√©lyez√©se
enable_ssh_root() {
    echo -e "${DEBIAN_RED}‚ö†Ô∏è FIGYELEM: A root bejelentkez√©s enged√©lyez√©se biztons√°gi kock√°zatot jelent.${DEBIAN_RESET}"
    read -p "Biztosan folytatod? (y/n): " ssh_choice
    if [[ "$ssh_choice" == "y" || "$ssh_choice" == "Y" ]]; then
        sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
        systemctl restart sshd
        echo -e "${DEBIAN_GREEN}‚úÖ SSH root bejelentkez√©s enged√©lyezve.${DEBIAN_RESET}"
    else
        echo -e "${DEBIAN_RED}‚ùå M≈±velet megszak√≠tva.${DEBIAN_RESET}"
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Rendszeradatok list√°z√°sa
list_system_info() {
    echo -e "${DEBIAN_CYAN}--- Rendszerinform√°ci√≥k ---${DEBIAN_RESET}"
    hostnamectl
    echo -e "${DEBIAN_CYAN}--- OS inform√°ci√≥ ---${DEBIAN_RESET}"
    lsb_release -a
    echo -e "${DEBIAN_CYAN}--- Kernel inform√°ci√≥ ---${DEBIAN_RESET}"
    uname -a
    echo -e "${DEBIAN_CYAN}--- CPU inform√°ci√≥ ---${DEBIAN_RESET}"
    lscpu
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Cockpit telep√≠t√©se √©s be√°ll√≠t√°sa
install_cockpit() {
    check_and_configure_trixie_repos
    echo -e "${DEBIAN_BLUE}üöÄ Cockpit telep√≠t√©se...${DEBIAN_RESET}"
    apt update
    apt install -y cockpit
    systemctl enable --now cockpit.socket
    echo -e "${DEBIAN_GREEN}‚úÖ Cockpit telep√≠tve √©s fut.${DEBIAN_RESET}"
    echo -e "${DEBIAN_CYAN}A webes fel√ºlet a k√∂vetkez≈ë c√≠men √©rhet≈ë el: https://<your-server-ip>:9090${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# SSH bejelentkez≈ë sz√∂veg szerkeszt√©se
edit_ssh_banner() {
    echo -e "${DEBIAN_BLUE}‚úçÔ∏è SSH bejelentkez≈ë sz√∂veg szerkeszt√©se.${DEBIAN_RESET}"
    
    if ! command -v nano &> /dev/null; then
        echo -e "${DEBIAN_YELLOW}A 'nano' szerkeszt≈ë nincs telep√≠tve. Telep√≠tj√ºk...${DEBIAN_RESET}"
        apt update && apt install -y nano
    fi
    
    nano /etc/issue.net
    
    sed -i '/^Banner/d' /etc/ssh/sshd_config
    echo "Banner /etc/issue.net" | tee -a /etc/ssh/sshd_config > /dev/null
    systemctl restart sshd
    echo -e "${DEBIAN_GREEN}‚úÖ SSH bejelentkez≈ë sz√∂veg elmentve √©s be√°ll√≠tva.${DEBIAN_RESET}"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# F≈ë ciklus
while true; do
    show_main_menu
    case $choice in
        1) configure_repos ;;
        2) update_system ;;
        3) install_basic_apps ;;
        4) show_network_menu ;;
        5) show_time_menu ;;
        6) configure_hostname ;;
        7) manage_users ;;
        8) enable_ssh_root ;;
        9) list_system_info ;;
        10) install_cockpit ;;
        11) edit_ssh_banner ;;
        12) echo -e "${DEBIAN_RED}üëã Viszl√°t!${DEBIAN_RESET}"; exit 0 ;;
        *) echo -e "${DEBIAN_RED}√ârv√©nytelen v√°laszt√°s. K√©rlek, pr√≥b√°ld √∫jra.${DEBIAN_RESET}"; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
done
