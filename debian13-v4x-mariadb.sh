#!/usr/bin/env bash
# ==============================================================================
# MariaDB Telep√≠t≈ë √©s Kezel≈ë Szkript
# K√©sz√ºlt: Debian 12/13 √©s Ubuntu 22.04+ rendszerekhez
# Verzi√≥: 4.2 Citk 2025 (Apache2-specifikus, adatb√°zis-ment√©ssel)
#
# F≈ëbb b≈ëv√≠t√©sek:
#   - MariaDB telep√≠t√©s √©s konfigur√°ci√≥.
#   - Root jelsz√≥kezel√©s be√©p√≠tve.
#   - Apache2 t√°mogat√°s a phpMyAdmin-hoz.
#   - Dedik√°lt adatb√°zis-ment√©si/vissza√°ll√≠t√°si men√º WDB form√°tumban.
# ==============================================================================
# --- Glob√°lis V√°ltoz√≥k √©s Be√°ll√≠t√°sok ---
set -o pipefail

# Sz√≠nek a jobb olvashat√≥s√°g√©rt
C_RESET='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_CYAN='\033[0;36m'

MARIADB_CONFIG="/etc/mysql/mariadb.conf.d/50-server.cnf"
BACKUP_DIR_BASE="/var/backups/mariadb"
MARIADB_ROOT_PASSWORD="" # Glob√°lis v√°ltoz√≥ a jelsz√≥ t√°rol√°s√°ra

# --- Seg√©df√ºggv√©nyek ---
function print_msg() { local color="$1"; local message="$2"; echo -e "${color}${message}${C_RESET}"; }
function press_enter_to_continue() { echo; read -rp "Nyomjon ENTER-t a folytat√°shoz..."; }
function command_exists() { command -v "$1" &>/dev/null; }

function check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Hiba: Ez a szkript csak root (vagy sudo) jogosults√°ggal futtathat√≥."
        exit 1
    fi
}

function get_root_password_if_needed() {
    # Csak akkor k√©rj√ºk be a jelsz√≥t, ha m√©g nincs be√°ll√≠tva
    if [ -z "$MARIADB_ROOT_PASSWORD" ]; then
        print_msg "$C_YELLOW" "‚ö†Ô∏è K√©rem, adja meg a MariaDB root jelszav√°t."
        read -rsp "MariaDB root jelsz√≥: " MARIADB_ROOT_PASSWORD
        echo

        # Gyors teszt a jelsz√≥val, miel≈ëtt visszat√©rn√©nk
        if ! mysql -u root -p"${MARIADB_ROOT_PASSWORD}" -e "quit" 2>/dev/null; then
            print_msg "$C_RED" "‚ùå √ârv√©nytelen MariaDB root jelsz√≥. K√©rem, pr√≥b√°lja √∫jra."
            MARIADB_ROOT_PASSWORD="" # T√∂r√∂lj√ºk a rossz jelsz√≥t
            return 1
        fi
        return 0
    fi
    return 0
}

# --------------------------------------------------------------------------------------------------

## 1. APACHE2 TELEP√çT√âS √âS BE√ÅLL√çT√ÅS
function setup_apache() {
    print_msg "$C_BLUE" "## 1. Apache2 webszerver telep√≠t√©se √©s konfigur√°l√°sa ##"
    
    # Apache2 telep√≠t√©se
    if dpkg -s apache2 &>/dev/null; then
        print_msg "$C_GREEN" "‚úÖ Az Apache2 m√°r telep√≠tve van."
    else
        print_msg "$C_CYAN" "üì¶ Apache2 telep√≠t√©se..."
        apt-get update
        if ! apt-get install -y apache2; then
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt az Apache2 telep√≠t√©se sor√°n."
            return 1
        fi
        print_msg "$C_GREEN" "‚úÖ Apache2 sikeresen telep√≠tve."
    fi
    
    # Apache2 modulok bekapcsol√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Apache2 modulok aktiv√°l√°sa..."
    a2enmod rewrite &>/dev/null
    systemctl restart apache2
    systemctl enable apache2 &>/dev/null
    
    # T≈±zfal be√°ll√≠t√°sa (ha akt√≠v)
    if command_exists ufw && ufw status | grep -q "active"; then
        ufw allow 'Apache Full' &>/dev/null
        print_msg "$C_GREEN" "‚úÖ T≈±zfalszab√°ly hozz√°adva a HTTP/HTTPS forgalomhoz."
    fi
    
    print_msg "$C_GREEN" "‚úÖ Apache2 sikeresen konfigur√°lva √©s elind√≠tva."
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 3. MARIADB SZERVER TELEP√çT√âSE 
function install_mariadb() {
    print_msg "$C_BLUE" "## 3. MariaDB szerver telep√≠t√©se √©s alapkonfigur√°ci√≥ ##"

    # Csomaglist√°k friss√≠t√©se
    print_msg "$C_CYAN" "üì¶ Csomaglist√°k friss√≠t√©se..."
    if ! apt-get update -y; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a csomaglist√°k friss√≠t√©se sor√°n."
        return 1
    fi

    # MariaDB szerver telep√≠t√©se
    print_msg "$C_CYAN" "üì¶ MariaDB szerver telep√≠t√©se..."
    # 'mariadb-server' telep√≠t√©se, ha m√©g nincs telep√≠tve
    if ! dpkg -s mariadb-server &>/dev/null; then
        if ! apt-get install -y mariadb-server; then
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a MariaDB telep√≠t√©se sor√°n."
            return 1
        fi
    else
        print_msg "$C_GREEN" "‚úÖ MariaDB m√°r telep√≠tve van."
    fi

    # A szolg√°ltat√°s elind√≠t√°sa √©s enged√©lyez√©se
    print_msg "$C_CYAN" "üöÄ MariaDB szolg√°ltat√°s ind√≠t√°sa..."
    if ! systemctl start mariadb.service; then
        print_msg "$C_RED" "‚ùå Nem siker√ºlt elind√≠tani a MariaDB szolg√°ltat√°st."
        return 1
    fi
    systemctl enable mariadb.service &>/dev/null

    # Alapvet≈ë biztons√°gi konfigur√°ci√≥ (opcion√°lis, mert a jelsz√≥be√°ll√≠t√°s k√∂vetkezik)
    # A debian/ubuntu socket autentik√°ci√≥ja miatt ezt manu√°lisan kezelj√ºk

    # A szolg√°ltat√°s √°llapot√°nak ellen≈ërz√©se
    if systemctl is-active --quiet mariadb.service; then
        print_msg "$C_GREEN" "‚úÖ A MariaDB sikeresen telep√≠tve √©s fut."
    else
        print_msg "$C_RED" "‚ùå A MariaDB telep√≠t√©se sikeres, de a szolg√°ltat√°s nem fut."
        return 1
    fi

    print_msg "$C_YELLOW" "‚ö†Ô∏è  K√©rem, a 4. men√ºpontban √°ll√≠tsa be a root jelsz√≥t √©s a hozz√°f√©r√©st!"
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 4. HOZZ√ÅF√âR√âS BE√ÅLL√çT√ÅSA 
function configure_access() {
    print_msg "$C_BLUE" "## 4. MariaDB Hozz√°f√©r√©s Be√°ll√≠t√°sa ##"
    
    print_msg "$C_CYAN" "üîê MariaDB Root Jelsz√≥ Be√°ll√≠t√°sa..."
    local new_root_password
    read -rsp "√öj MariaDB Root Jelsz√≥ (hagyja √ºresen a kihagy√°shoz): " new_root_password
    echo

    if [ -n "$new_root_password" ]; then
        # Jelsz√≥ be√°ll√≠t√°sa a unix_socket pluginnal val√≥ autentik√°ci√≥val
        mysql -u root <<EOF 2>/dev/null
ALTER USER 'root'@'localhost' IDENTIFIED BY '${new_root_password}';
FLUSH PRIVILEGES;
EOF
        if [ $? -eq 0 ]; then
            MARIADB_ROOT_PASSWORD="$new_root_password" # Glob√°lis v√°ltoz√≥ friss√≠t√©se
            print_msg "$C_GREEN" "‚úÖ Root jelsz√≥ sikeresen be√°ll√≠tva."
        else
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a jelsz√≥ be√°ll√≠t√°sa sor√°n. Lehet, hogy m√°r be van √°ll√≠tva √©s nem a 'root' felhaszn√°l√≥val kell a m≈±veletet v√©grehajtani."
        fi
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  Root jelsz√≥ be√°ll√≠t√°sa kihagyva."
    fi
    
    read -rp "Enged√©lyezi a t√°voli root hozz√°f√©r√©st? (i/n): " remote_access
    if [[ "$remote_access" =~ ^[iI](gen)?$ ]]; then
        if [ -z "$MARIADB_ROOT_PASSWORD" ]; then
            print_msg "$C_RED" "‚ùå A t√°voli hozz√°f√©r√©shez be kell √°ll√≠tani a root jelsz√≥t el≈ëbb!"
        else
            print_msg "$C_CYAN" "üåê T√°voli hozz√°f√©r√©s be√°ll√≠t√°sa..."
            # L√©trehozzuk a root felhaszn√°l√≥t b√°rmely hostr√≥l
            mysql -u root -p"${MARIADB_ROOT_PASSWORD}" <<EOF 2>/dev/null
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${MARIADB_ROOT_PASSWORD}' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EOF
            
            # MariaDB konfigur√°ci√≥ m√≥dos√≠t√°sa, hogy engedje a t√°voli kapcsolatokat
            if grep -q "bind-address" "$MARIADB_CONFIG"; then
                sed -i 's/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/' "$MARIADB_CONFIG"
            else
                echo -e "\n[mysqld]\nbind-address = 0.0.0.0" >> "$MARIADB_CONFIG"
            fi
            
            systemctl restart mariadb.service
            
            # T≈±zfal be√°ll√≠t√°sa (ha akt√≠v)
            if command_exists ufw && ufw status | grep -q "active"; then
                ufw allow 3306/tcp &>/dev/null
                print_msg "$C_GREEN" "‚úÖ T≈±zfalszab√°ly hozz√°adva a 3306-os porthoz."
            fi
            
            print_msg "$C_GREEN" "‚úÖ T√°voli hozz√°f√©r√©s enged√©lyezve. (MariaDB √∫jraind√≠tva)"
        fi
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  T√°voli hozz√°f√©r√©s tiltva (alap√©rtelmezett)."
    fi

    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 2. JAV√çTOTT PHPMYADMIN TELEP√çT√âS (CSAK APACHE2)
function install_phpmyadmin_apache() {
    print_msg "$C_BLUE" "## 2. phpMyAdmin Telep√≠t√©se (Apache2-hez) ##"
    
    # K√©rj√ºk be a root jelsz√≥t, mert a phpMyAdmin-hoz kell!
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs MariaDB root jelsz√≥. A phpMyAdmin telep√≠t√©se megszak√≠tva."
        return 1
    fi

    # PHP √©s sz√ºks√©ges b≈ëv√≠tm√©nyek telep√≠t√©se
    print_msg "$C_CYAN" "üì¶ PHP √©s sz√ºks√©ges modulok telep√≠t√©se..."
    if ! apt-get install -y php php-mysql php-mbstring php-curl php-zip php-gd; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a PHP modulok telep√≠t√©se sor√°n."
        return 1
    fi
    
    # phpMyAdmin telep√≠t√©se nem interakt√≠v m√≥don
    print_msg "$C_CYAN" "üì¶ phpMyAdmin telep√≠t√©se..."
    export DEBIAN_FRONTEND=noninteractive
    
    # V√°laszok be√°ll√≠t√°sa: adatb√°zis konfigur√°l√°s IGEN, webszerver Apache2
    echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections
    
    # Root √©s App jelsz√≥ be√°ll√≠t√°sa
    echo "phpmyadmin phpmyadmin/mysql/admin-pass password $MARIADB_ROOT_PASSWORD" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/app-pass password $MARIADB_ROOT_PASSWORD" | debconf-set-selections
    
    if ! apt-get install -yq phpmyadmin; then
        print_msg "$C_RED" "‚ùå Hiba a phpMyAdmin telep√≠t√©se sor√°n."
        return 1
    fi
    
    # Apache konfigur√°ci√≥ aktiv√°l√°sa
    print_msg "$C_CYAN" "‚öôÔ∏è  Apache2 konfigur√°l√°sa a phpMyAdmin-hoz..."
    a2enconf phpmyadmin &>/dev/null
    systemctl reload apache2
    
    print_msg "$C_GREEN" "‚úÖ A phpMyAdmin sikeresen telep√≠tve √©s konfigur√°lva."
    print_msg "$C_CYAN" "üåê El√©rhet≈ë itt: http://$(hostname -I | awk '{print $1}')/phpmyadmin"
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 5. FELHASZN√ÅL√ì- √âS JOGOSULTS√ÅGKEZEL√âS (Egyszer≈±s√≠tve)
function user_management() {
    print_msg "$C_BLUE" "## 5. Felhaszn√°l√≥- √©s Jogosults√°gkezel√©s (MariaDB) ##"
    
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. M≈±velet megszak√≠tva."
        return 1
    fi

    print_msg "$C_CYAN" "‚ÑπÔ∏è  Jelenleg csak a MariaDB parancssor √©rhet≈ë el. A teljes funkcionalit√°s√©rt haszn√°lja a phpMyAdmin-t!"
    print_msg "$C_CYAN" "‚ñ∂Ô∏è  Bel√©p√©s a MariaDB parancssori kliensbe:"
    
    mysql -u root -p"${MARIADB_ROOT_PASSWORD}"

    print_msg "$C_CYAN" "‚Ü©Ô∏è  Visszat√©r√©s a f≈ëmen√ºbe."
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 6. ADATB√ÅZIS MENT√âSE
function backup_database() {
    print_msg "$C_BLUE" "## 6. Adatb√°zis ment√©se (WDB form√°tum) ##"
    
    # Root jelsz√≥ bek√©r√©se
    get_root_password_if_needed
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. A ment√©s megszak√≠tva."
        return 1
    fi
    
    # Ment√©si k√∂nyvt√°r ellen≈ërz√©se/l√©trehoz√°sa
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    local backup_dir="${BACKUP_DIR_BASE}/backup_${timestamp}"
    local backup_file="${backup_dir}/database_backup.wdb"
    
    mkdir -p "$backup_dir"
    
    if [ $? -ne 0 ]; then
        print_msg "$C_RED" "‚ùå Nem siker√ºlt l√©trehozni a ment√©si k√∂nyvt√°rat: $backup_dir"
        return 1
    fi
    
    print_msg "$C_CYAN" "üíæ Adatb√°zis ment√©se folyamatban: $backup_file"
    
    # Adatb√°zis ment√©se mysqldump seg√≠ts√©g√©vel
    # A --single-transaction garant√°lja a konzisztenci√°t!
    if ! mysqldump -u root -p"${MARIADB_ROOT_PASSWORD}" --all-databases --single-transaction > "$backup_file" 2>/dev/null; then
        print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt az adatb√°zis ment√©se sor√°n. (Lehet, hogy rossz a jelsz√≥)"
        # Ment√©si k√∂nyvt√°r takar√≠t√°sa
        rm -rf "$backup_dir"
        return 1
    fi
    
    # Sikeres ment√©s ut√°ni teend≈ëk
    local file_size=$(du -h "$backup_file" | cut -f1)
    print_msg "$C_GREEN" "‚úÖ Adatb√°zis sikeresen mentve!"
    print_msg "$C_CYAN" "üìÅ F√°jl helye: $backup_file"
    print_msg "$C_CYAN" "üìè F√°jl m√©ret: $file_size"
    
    # Biztons√°gi m√°solat a legut√≥bbi ment√©sr≈ël
    local latest_backup="${BACKUP_DIR_BASE}/latest"
    # Szimbolikus link l√©trehoz√°sa (f: er≈ëltetett, n: nem k√∂veti a linket)
    ln -sfn "$backup_dir" "$latest_backup"
    print_msg "$C_CYAN" "üîó Legut√≥bbi ment√©s linkje friss√≠tve: $latest_backup -> $backup_dir"

    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 7. ADATB√ÅZIS VISSZA√ÅLL√çT√ÅSI FUNKCI√ì
function restore_database() {
    print_msg "$C_BLUE" "## 7. Adatb√°zis vissza√°ll√≠t√°sa ##"
    
    # Ment√©sek list√°z√°sa
    if [ ! -d "$BACKUP_DIR_BASE" ]; then
        print_msg "$C_RED" "‚ùå Nincsenek ment√©sek a $BACKUP_DIR_BASE k√∂nyvt√°rban."
        return 1
    fi
    
    # Ment√©si f√°jlok gy≈±jt√©se, bele√©rtve a k√∂nyvt√°r nev√©t is, majd d√°tum szerint ford√≠tott sorrendben
    # A k√∂nyvt√°r nev√©b≈ël kell a timestamp-et kinyerni, mert az a pontos id≈ëpont
    local backups_temp=($(find "$BACKUP_DIR_BASE" -type d -name "backup_*" | sort -r))
    local backups=()

    for dir in "${backups_temp[@]}"; do
        local file="$dir/database_backup.wdb"
        if [ -f "$file" ]; then
            backups+=("$file")
        fi
    done

    if [ ${#backups[@]} -eq 0 ]; then
        print_msg "$C_RED" "‚ùå Nem tal√°lhat√≥ WDB ment√©si f√°jl."
        return 1
    fi
    
    print_msg "$C_CYAN" "üìã El√©rhet≈ë ment√©sek (leg√∫jabb el√∂l):"
    local i=1
    for backup in "${backups[@]}"; do
        local size=$(du -h "$backup" | cut -f1)
        # Az id≈ëb√©lyeg kinyer√©se a k√∂nyvt√°rn√©vb≈ël
        local timestamp_part=$(basename "$(dirname "$backup")" | sed 's/backup_//')
        local date_part=$(echo "$timestamp_part" | cut -d'_' -f1)
        local time_part=$(echo "$timestamp_part" | cut -d'_' -f2 | sed 's/\(..\)/\1:/g; s/:$//')
        echo "  $i) $backup (M√©ret: $size, D√°tum: $date_part $time_part)"
        ((i++))
    done
    
    read -rp "V√°lassza ki a vissza√°ll√≠tand√≥ ment√©s sorsz√°m√°t: " restore_choice
    
    if ! [[ "$restore_choice" =~ ^[0-9]+$ ]] || [ "$restore_choice" -lt 1 ] || [ "$restore_choice" -gt ${#backups[@]} ]; then
        print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s."
        return 1
    fi
    
    local selected_backup="${backups[$((restore_choice-1))]}"
    
    print_msg "$C_YELLOW" "‚ö†Ô∏è  FIGYELEM: A **${selected_backup}** ment√©s fel√ºl√≠rja az √ñSSZES adatb√°zist!"
    read -rp "Biztosan folytatja? (i/n): " confirm_restore
    
    if [[ "$confirm_restore" =~ ^[iI](gen)?$ ]]; then
        get_root_password_if_needed
        if [ $? -ne 0 ]; then
            print_msg "$C_RED" "‚ùå Nincs root jelsz√≥ megadva. A vissza√°ll√≠t√°s megszak√≠tva."
            return 1
        fi
        
        print_msg "$C_CYAN" "üîÑ Adatb√°zis vissza√°ll√≠t√°sa folyamatban: $selected_backup"
        # --force opci√≥ sz√ºks√©ges, ha a f√°jl tartalmazza a DROP DATABASE parancsot
        if mysql -u root -p"${MARIADB_ROOT_PASSWORD}" --force < "$selected_backup" 2>/dev/null; then
            print_msg "$C_GREEN" "‚úÖ Adatb√°zis sikeresen vissza√°ll√≠tva!"
        else
            print_msg "$C_RED" "‚ùå Hiba t√∂rt√©nt a vissza√°ll√≠t√°s sor√°n. (Ellen≈ërizze a napl√≥kat √©s a jelsz√≥t)"
        fi
    else
        print_msg "$C_YELLOW" "‚ÑπÔ∏è  Vissza√°ll√≠t√°s megszak√≠tva."
    fi
    
    press_enter_to_continue
}

# --------------------------------------------------------------------------------------------------

## 8. MENT√âSEK KEZEL√âSE
function manage_backups() {
    print_msg "$C_BLUE" "## 8. Ment√©sek kezel√©se ##"
    
    while true; do
        echo -e "\n--- Ment√©sek Kezel√©se Almen√º ---"
        echo "1. Ment√©sek list√°z√°sa"
        echo "2. R√©gi ment√©si k√∂nyvt√°rak t√∂rl√©se (7 napn√°l r√©gebbiek)"
        echo "3. Vissza a f≈ëmen√ºbe"
        read -rp "V√°laszt√°s (1-3): " backup_choice

        case $backup_choice in
            1)
                if [ -d "$BACKUP_DIR_BASE" ]; then
                    echo -e "\nüìã Ment√©sek list√°ja ($BACKUP_DIR_BASE):"
                    # Csak a backup_* k√∂nyvt√°rakat list√°zzuk
                    find "$BACKUP_DIR_BASE" -type d -name "backup_*" -prune -exec du -sh {} \; | sort -r | while read line; do
                        local size=$(echo "$line" | awk '{print $1}')
                        local dir_path=$(echo "$line" | awk '{print $2}')
                        local dir_name=$(basename "$dir_path")
                        local timestamp_part=$(echo "$dir_name" | sed 's/backup_//')
                        local date_part=$(echo "$timestamp_part" | cut -d'_' -f1)
                        local time_part=$(echo "$timestamp_part" | cut -d'_' -f2 | sed 's/\(..\)/\1:/g; s/:$//')
                        echo "üìç $dir_path (M√©ret: $size, D√°tum: $date_part $time_part)"
                    done
                else
                    print_msg "$C_YELLOW" "‚ÑπÔ∏è  Nincsenek ment√©sek."
                fi
                press_enter_to_continue
                ;;
            2)
                print_msg "$C_YELLOW" "üóëÔ∏è  7 napn√°l r√©gebbi ment√©si k√∂nyvt√°rak t√∂rl√©se ($BACKUP_DIR_BASE)..."
                # Csak a 'backup_*' nev≈± k√∂nyvt√°rakat t√∂r√∂lj√ºk, amelyek 7 napn√°l r√©gebbiek
                find "$BACKUP_DIR_BASE" -type d -name "backup_*" -mtime +7 -exec rm -rf {} \;
                print_msg "$C_GREEN" "‚úÖ R√©gi ment√©sek t√∂rl√©se befejez≈ëd√∂tt."
                press_enter_to_continue
                ;;
            3) break ;;
            *) print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s." ;;
        esac
    done
}

# --------------------------------------------------------------------------------------------------

## F≈êMEN√ú
function main_menu() {
    while true; do
        clear
        echo -e "${C_BLUE}====================================================="
        echo -e "      MariaDB Telep√≠t≈ë √©s Kezel≈ë Script (v4.2)"
        echo -e "         APACHE2 SPECIFIKUS + ADATB√ÅZIS MENT√âS"
        echo -e "=====================================================${C_RESET}"
        echo -e "${C_YELLOW}--- Telep√≠t√©s √©s Konfigur√°ci√≥ ---${C_RESET}"
        echo "1. Apache2 webszerver telep√≠t√©se"
        echo "2. phpMyAdmin Telep√≠t√©se (Apache2-hez)"
        echo "3. MariaDB szerver telep√≠t√©se"
        echo "4. Hozz√°f√©r√©s Be√°ll√≠t√°sa (Root jelsz√≥, T√°voli el√©r√©s, T≈±zfal)"
        echo -e "${C_YELLOW}--- Adatb√°zis Kezel√©s ---${C_RESET}"
        echo "5. Felhaszn√°l√≥- √©s Jogosults√°gkezel√©s"
        echo "6. Adatb√°zis ment√©se (WDB form√°tum) - √öJ"
        echo "7. Adatb√°zis vissza√°ll√≠t√°sa - √öJ"
        echo "8. Ment√©sek kezel√©se - √öJ"
        echo -e "${C_YELLOW}--- Egy√©b ---${C_RESET}"
        echo "9. Kil√©p√©s"
        echo -e "${C_BLUE}=====================================================${C_RESET}"
        read -rp "V√°laszt√°s (1-9): " choice

        case $choice in
            1) setup_apache ;;
            2) install_phpmyadmin_apache ;;
            3) install_mariadb ;;
            4) configure_access ;;
            5) user_management ;;
            6) backup_database ;;
            7) restore_database ;;
            8) manage_backups ;;
            9) echo -e "${C_GREEN}Viszl√°t! üëã${C_RESET}"; exit 0 ;;
            *) print_msg "$C_RED" "‚ùå √ârv√©nytelen v√°laszt√°s."; press_enter_to_continue ;;
        esac
    done
}

# --- Szkript ind√≠t√°sa ---
check_root
main_menu
