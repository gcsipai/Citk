#!/bin/bash

# Ellen≈ërizz√ºk, hogy a szkript root felhaszn√°l√≥k√©nt fut-e
if [ "$EUID" -ne 0 ]; then
    echo "‚ö†Ô∏è Ez a szkript root jogosults√°gokat ig√©nyel. K√©rj√ºk, futtassa 'sudo' vagy 'su' haszn√°lat√°val."
    exit 1
fi

# A szkript interakt√≠v men√ºj√©nek megjelen√≠t√©se
show_main_menu() {
    clear
    echo "========================================="
    echo "         Debian 13 Be√°ll√≠t√≥ Szkript 1.5a Complex IT Group @ Kispest 2025     "
    echo "========================================="
    echo "1. Csomagforr√°sok konfigur√°l√°sa"
    echo "2. Rendszer friss√≠t√©se (apt update & upgrade)"
    echo "3. Alapvet≈ë alkalmaz√°sok telep√≠t√©se"
    echo "4. H√°l√≥zati be√°ll√≠t√°sok (NetworkManager)"
    echo "5. Hostn√©v √©s FQDN be√°ll√≠t√°sa"
    echo "6. Felhaszn√°l√≥kezel√©s"
    echo "7. SSH root bejelentkez√©s enged√©lyez√©se"
    echo "8. Rendszeradatok list√°z√°sa"
    echo "9. Cockpit telep√≠t√©se √©s be√°ll√≠t√°sa"
    echo "10. SSH bejelentkez≈ë sz√∂veg szerkeszt√©se"
    echo "11. Kil√©p√©s"
    echo "========================================="
    read -p "V√°lassz egy opci√≥t: " choice
}

# --- Seg√©dfunkci√≥k ---

# Ellen≈ërzi √©s hozz√°adja a trixie rep√≥kat
check_and_configure_trixie_repos() {
    if ! grep -q "trixie main" /etc/apt/sources.list; then
        echo "‚öôÔ∏è A sources.list f√°jl hi√°nyos vagy hib√°s. Hozz√°adjuk a 'trixie' rep√≥kat a teljes funkcionalit√°s √©rdek√©ben."
        configure_repos
        echo "Csomaglista friss√≠t√©se..."
        apt update
        echo "‚úÖ A csomaglista friss√≠t√©se sikeres."
    fi
}

# --- Csomagkezel√©si √©s telep√≠t√©si funkci√≥k ---

# Csomagforr√°sok konfigur√°l√°sa
configure_repos() {
    echo "‚öôÔ∏è Csomagforr√°sok konfigur√°l√°sa..."
    
    # Elt√°vol√≠tjuk a r√©gi rep√≥kat, √©s hozz√°adjuk a Debian 13 "trixie" rep√≥kat
    cp /etc/apt/sources.list /etc/apt/sources.list.bak
    
    cat <<EOF > /etc/apt/sources.list
deb http://deb.debian.org/debian/ trixie main contrib non-free non-free-firmware
deb http://deb.debian.org/debian/ trixie-updates main contrib non-free non-free-firmware
deb http://deb.debian.org/debian-security/ trixie-security main contrib non-free non-free-firmware
EOF
    
    echo "‚úÖ Csomagforr√°sok sikeresen konfigur√°lva 'trixie'-re."
    echo "Most friss√≠teni kell a csomaglist√°t az √∫j be√°ll√≠t√°sok √©rv√©nybel√©p√©s√©hez."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Rendszer friss√≠t√©se
update_system() {
    check_and_configure_trixie_repos
    echo "üîÑ Rendszer friss√≠t√©se..."
    apt update
    apt upgrade -y
    echo "‚úÖ A rendszer naprak√©sz."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Alapvet≈ë alkalmaz√°sok telep√≠t√©se
install_basic_apps() {
    check_and_configure_trixie_repos
    echo "üöÄ Alapvet≈ë alkalmaz√°sok telep√≠t√©se: mc, unzip, zip, htop, bpytop, curl..."
    apt update
    if ! apt install -y mc unzip zip htop bpytop curl; then
        echo "‚ùå Hiba az alapvet≈ë alkalmaz√°sok telep√≠t√©se sor√°n."
        read -p "Nyomj Entert a folytat√°shoz..."
        return
    fi
    echo "‚úÖ Az alkalmaz√°sok sikeresen telep√≠tve."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- H√°l√≥zati funkci√≥k (NetworkManager alap√∫) ---

install_network_dependencies() {
    check_and_configure_trixie_repos
    echo "üöÄ A sz√ºks√©ges h√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se: network-manager, net-tools, ifenslave, vlan..."
    
    apt update
    if ! apt install -y network-manager net-tools ifenslave vlan; then
        echo "‚ùå Hiba a h√°l√≥zati csomagok telep√≠t√©se sor√°n."
        read -p "Nyomj Entert a folytat√°shoz..."
        return
    fi
    
    echo "üîÑ A hagyom√°nyos 'ifupdown' √©s 'systemd-networkd' rendszer letilt√°sa..."
    systemctl stop networking 2>/dev/null || true
    systemctl disable networking 2>/dev/null || true
    systemctl mask networking
    
    systemctl stop systemd-networkd 2>/dev/null || true
    systemctl disable systemd-networkd 2>/dev/null || true
    systemctl mask systemd-networkd

    echo "‚úÖ A NetworkManager enged√©lyez√©se √©s ind√≠t√°sa..."
    systemctl unmask NetworkManager
    systemctl enable --now NetworkManager
    
    echo "‚öôÔ∏è NetworkManager konfigur√°ci√≥ be√°ll√≠t√°sa managed=true-ra..."
    if [ -f "/etc/NetworkManager/NetworkManager.conf" ]; then
        if ! grep -q "managed=true" /etc/NetworkManager/NetworkManager.conf; then
            sed -i 's/managed=false/managed=true/' /etc/NetworkManager/NetworkManager.conf
        fi
    fi

    echo "‚öôÔ∏è /etc/network/interfaces f√°jl megtiszt√≠t√°sa a konfliktusok elker√ºl√©se √©rdek√©ben..."
    if [ -f "/etc/network/interfaces" ]; then
        cp /etc/network/interfaces /etc/network/interfaces.backup
        cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
EOF
        echo "‚úÖ interfaces f√°jl megtiszt√≠tva."
    fi

    echo "‚úÖ A h√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se √©s a NetworkManager konfigur√°l√°sa befejez≈ëd√∂tt."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NetworkManager probl√©m√°k jav√≠t√°sa
fix_network_manager_issues() {
    echo "üîß NetworkManager probl√©m√°k diagnosztiz√°l√°sa √©s jav√≠t√°sa..."
    echo "1. NetworkManager szolg√°ltat√°s ellen≈ërz√©se..."
    systemctl status NetworkManager --no-pager -l
    
    echo -e "\n2. H√°l√≥zati interf√©szek √°llapota:"
    nmcli device status
    
    echo -e "\n3. /etc/network/interfaces f√°jl ellen≈ërz√©se:"
    if [ -f "/etc/network/interfaces" ]; then
        cat /etc/network/interfaces
        read -p "Szeretn√©d megtiszt√≠tani az interfaces f√°jlt? (y/n): " clean_interfaces
        if [[ "$clean_interfaces" == "y" || "$clean_interfaces" == "Y" ]]; then
            cp /etc/network/interfaces /etc/network/interfaces.backup
            cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
EOF
            echo "‚úÖ interfaces f√°jl megtiszt√≠tva"
        fi
    fi
    
    echo -e "\n4. NetworkManager konfigur√°ci√≥ ellen≈ërz√©se:"
    if [ -f "/etc/NetworkManager/NetworkManager.conf" ]; then
        cat /etc/NetworkManager/NetworkManager.conf
        if ! grep -q "managed=true" /etc/NetworkManager/NetworkManager.conf; then
            echo "‚ö†Ô∏è NetworkManager nincs managed m√≥dban"
            read -p "Szeretn√©d be√°ll√≠tani managed=true-ra? (y/n): " set_managed
            if [[ "$set_managed" == "y" || "$set_managed" == "Y" ]]; then
                sed -i 's/managed=false/managed=true/' /etc/NetworkManager/NetworkManager.conf
                echo "‚úÖ NetworkManager be√°ll√≠tva managed=true-ra"
            fi
        fi
    fi
    
    echo -e "\n5. NetworkManager √∫jraind√≠t√°sa..."
    systemctl restart NetworkManager
    sleep 3
    
    echo -e "\n6. V√©gleges √°llapot ellen≈ërz√©se:"
    nmcli device status
    
    echo -e "\n‚úÖ NetworkManager probl√©majav√≠t√°s befejezve"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# NetworkManager konfigur√°ci√≥s f√°jlok jav√≠t√°sa
fix_nm_config_files() {
    echo "üîß NetworkManager konfigur√°ci√≥s f√°jlok jav√≠t√°sa..."
    
    echo "1. Netplan konfliktusok ellen≈ërz√©se √©s elt√°vol√≠t√°sa..."
    if [ -d "/etc/netplan/" ]; then
        echo "Netplan f√°jlok a /etc/netplan/ k√∂nyvt√°rban:"
        ls -la /etc/netplan/
        
        conflicting_files=$(find /etc/netplan/ -name "*.yaml" -o -name "*.yml" 2>/dev/null || true)
        
        if [ -n "$conflicting_files" ]; then
            echo "‚ö†Ô∏è Netplan konfliktusok tal√°lhat√≥k: $conflicting_files"
            read -p "Szeretn√©d biztons√°gi m√°solatot k√©sz√≠teni √©s elt√°vol√≠tani ezeket? (y/n): " remove_netplan
            if [[ "$remove_netplan" == "y" || "$remove_netplan" == "Y" ]]; then
                for file in $conflicting_files; do
                    backup_file="${file}.backup"
                    cp "$file" "$backup_file"
                    echo "‚úÖ $file biztons√°gi m√°solat k√©sz√≠tve: $backup_file"
                    rm "$file"
                    echo "‚úÖ $file elt√°vol√≠tva"
                done
                netplan apply
            fi
        else
            echo "‚úÖ Nincsenek Netplan konfliktusok"
        fi
    fi
    
    echo -e "\n2. NetworkManager kapcsolati f√°jlok t√∂rl√©se..."
    read -p "Szeretn√©d elt√°vol√≠tani az √∂sszes NetworkManager kapcsolati f√°jlt? Ez √∫jrakonfigur√°l√°st ig√©nyel! (y/n): " remove_nm_files
    if [[ "$remove_nm_files" == "y" || "$remove_nm_files" == "Y" ]]; then
        rm -f /etc/NetworkManager/system-connections/*
        echo "‚úÖ √ñsszes kapcsolati f√°jl elt√°vol√≠tva."
    fi
    
    echo -e "\n3. NetworkManager √∫jraind√≠t√°sa..."
    systemctl restart NetworkManager
    sleep 3
    
    echo -e "\n‚úÖ Konfigur√°ci√≥s f√°jlok jav√≠t√°sa befejez≈ëd√∂tt."
    echo "Most hozz l√©tre √∫j kapcsolatokat az nmtui vagy nmcli haszn√°lat√°val."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Statikus IP be√°ll√≠t√°sa nmcli-vel
configure_static_ip_nmcli() {
    echo "üîß Statikus IP be√°ll√≠t√°sa a NetworkManager-rel (nmcli)..."
    nmcli device status
    read -p "Add meg a konfigur√°land√≥ h√°l√≥zati interf√©sz nev√©t (pl. eth0 vagy ens33): " interface_name
    read -p "Add meg a kapcsolat nev√©t (pl. 'Static IP'): " connection_name
    
    # Kapcsolat l√©trehoz√°sa
    nmcli connection add type ethernet con-name "$connection_name" ifname "$interface_name"
    
    # Statikus IP be√°ll√≠t√°sa
    echo -e "\n--- Statikus IP c√≠m be√°ll√≠t√°sa ---"
    read -p "Add meg az IPv4 c√≠met (pl. 192.168.1.100/24): " ip_address
    nmcli connection modify "$connection_name" ipv4.method manual ipv4.addresses "$ip_address"
    
    read -p "Add meg az IPv4 √°tj√°r√≥t (pl. 192.168.1.1): " gateway
    nmcli connection modify "$connection_name" ipv4.gateway "$gateway"
    
    read -p "Add meg a DNS szervereket (sz√≥k√∂zzel elv√°lasztva, pl. 8.8.8.8 8.8.4.4): " dns_servers
    nmcli connection modify "$connection_name" ipv4.dns "$dns_servers"

    # IPv6 letilt√°sa
    nmcli connection modify "$connection_name" ipv6.method disabled

    echo "‚úÖ Statikus IP be√°ll√≠t√°sai elmentve."
    
    # Kapcsolat aktiv√°l√°sa
    echo -e "\nüîÑ Kapcsolat aktiv√°l√°sa..."
    nmcli connection up "$connection_name"
    sleep 3
    
    echo -e "\n‚úÖ A(z) '$connection_name' nev≈± statikus kapcsolat akt√≠v."
    echo "--- Aktu√°lis h√°l√≥zati be√°ll√≠t√°sok ---"
    ip addr show "$interface_name"
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

# H√°l√≥zati napl√≥k megjelen√≠t√©se
show_network_logs() {
    echo "üìã H√°l√≥zati napl√≥k megjelen√≠t√©se..."
    echo "1. NetworkManager napl√≥k (utols√≥ 20 sor):"
    journalctl -u NetworkManager -n 20 --no-pager
    
    echo -e "\n2. Aktu√°lis h√°l√≥zati konfigur√°ci√≥:"
    ip addr show
    
    echo -e "\n3. √ötv√°laszt√°si t√°bla:"
    ip route show
    
    echo -e "\n4. DNS be√°ll√≠t√°sok:"
    cat /etc/resolv.conf
    
    read -p "Nyomj Entert a folytat√°shoz..."
}

show_network_menu() {
    clear
    echo "--- H√°l√≥zati Be√°ll√≠t√°sok (NetworkManager) ---"
    echo "0. H√°l√≥zati f√ºgg≈ës√©gek telep√≠t√©se √©s konfigur√°l√°sa (Ezzel kell kezdeni!)"
    echo "1. H√°l√≥zati be√°ll√≠t√°s grafikus karakteres fel√ºleten (nmtui)"
    echo "2. Statikus IP be√°ll√≠t√°sa (nmcli)"
    echo "3. NetworkManager probl√©m√°k jav√≠t√°sa (diagnosztika)"
    echo "4. NM konfigur√°ci√≥s f√°jlok jav√≠t√°sa (t√∂rl√©s)"
    echo "5. H√°l√≥zati interf√©szek list√°z√°sa (nmcli)"
    echo "6. H√°l√≥zati napl√≥k megjelen√≠t√©se"
    echo "7. Vissza a f≈ëmen√ºbe"
    echo "----------------------------------------------"
    read -p "V√°lassz egy h√°l√≥zati opci√≥t: " net_choice

    case $net_choice in
        0) install_network_dependencies ;;
        1) 
            if command -v nmtui &> /dev/null; then
                nmtui
            else
                echo "‚ùå Az nmtui nincs telep√≠tve. El≈ësz√∂r telep√≠tsd a h√°l√≥zati f√ºgg≈ës√©geket (0. opci√≥)."
                read -p "Nyomj Entert a folytat√°shoz..."
            fi
            ;;
        2) configure_static_ip_nmcli ;;
        3) fix_network_manager_issues ;;
        4) fix_nm_config_files ;;
        5) 
            echo "--- H√°l√≥zati interf√©szek √°llapota ---"
            nmcli device status
            echo -e "\n--- R√©szletes interf√©sz inform√°ci√≥k ---"
            ip addr show
            read -p "Nyomj Entert a folytat√°shoz..."
            ;;
        6) show_network_logs ;;
        7) return ;;
        *) echo "√ârv√©nytelen v√°laszt√°s."; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
}

# --- Felhaszn√°l√≥kezel√©si funkci√≥k ---

list_users() {
    echo "--- Felhaszn√°l√≥k list√°ja ---"
    awk -F':' '{ print $1}' /etc/passwd | grep -v 'nologin' | grep -v 'false' | grep -v 'sync'
    read -p "Nyomj Entert a folytat√°shoz..."
}

delete_user() {
    read -p "Add meg a t√∂r√∂lni k√≠v√°nt felhaszn√°l√≥ nev√©t: " user_to_delete
    read -p "‚ö†Ô∏è Biztosan t√∂r√∂lni szeretn√©d a(z) '$user_to_delete' felhaszn√°l√≥t √©s a home k√∂nyvt√°r√°t? (y/n): " confirm_delete
    if [[ "$confirm_delete" == "y" || "$confirm_delete" == "Y" ]]; then
        /usr/sbin/userdel -r "$user_to_delete"
        echo "‚úÖ A(z) '$user_to_delete' felhaszn√°l√≥ sikeresen t√∂r√∂lve."
    else
        echo "‚ùå Felhaszn√°l√≥ t√∂rl√©se megszak√≠tva."
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

manage_users() {
    clear
    echo "--- Felhaszn√°l√≥kezel√©s ---"
    echo "1. √öj felhaszn√°l√≥ hozz√°ad√°sa √©s sudo be√°ll√≠t√°sa"
    echo "2. Felhaszn√°l√≥k list√°z√°sa"
    echo "3. Felhaszn√°l√≥ t√∂rl√©se"
    echo "4. Vissza a f≈ëmen√ºbe"
    echo "---------------------------"
    read -p "V√°lassz egy felhaszn√°l√≥kezel√©si opci√≥t: " user_choice
    case $user_choice in
        1) add_user_sudo ;;
        2) list_users ;;
        3) delete_user ;;
        4) return ;;
        *) echo "√ârv√©nytelen v√°laszt√°s."; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
}

add_user_sudo() {
    read -p "Add meg az √∫j felhaszn√°l√≥ nev√©t: " new_user
    /usr/sbin/adduser "$new_user"
    /usr/sbin/usermod -aG sudo "$new_user"
    echo "‚úÖ A(z) '$new_user' felhaszn√°l√≥ hozz√°adva √©s a 'sudo' csoporthoz rendelve."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# --- Egy√©b konfigur√°ci√≥s funkci√≥k ---

# Hostn√©v √©s FQDN be√°ll√≠t√°sa
configure_hostname() {
    read -p "Add meg az √∫j hosztnevet: " new_hostname
    hostnamectl set-hostname "$new_hostname"
    
    if grep -q "127.0.1.1" /etc/hosts; then
        sed -i "s/^127.0.1.1.*$/127.0.1.1\t$new_hostname.local\t$new_hostname/" /etc/hosts
    else
        echo -e "127.0.1.1\t$new_hostname.local\t$new_hostname" | tee -a /etc/hosts > /dev/null
    fi
    echo "‚úÖ Hostn√©v be√°ll√≠tva: $new_hostname"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# SSH root bejelentkez√©s enged√©lyez√©se
enable_ssh_root() {
    echo "‚ö†Ô∏è FIGYELEM: A root bejelentkez√©s enged√©lyez√©se biztons√°gi kock√°zatot jelent."
    read -p "Biztosan folytatod? (y/n): " ssh_choice
    if [[ "$ssh_choice" == "y" || "$ssh_choice" == "Y" ]]; then
        sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
        systemctl restart sshd
        echo "‚úÖ SSH root bejelentkez√©s enged√©lyezve."
    else
        echo "‚ùå M≈±velet megszak√≠tva."
    fi
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Rendszeradatok list√°z√°sa
list_system_info() {
    echo "--- Rendszerinform√°ci√≥k ---"
    hostnamectl
    echo "--- OS inform√°ci√≥ ---"
    lsb_release -a
    echo "--- Kernel inform√°ci√≥ ---"
    uname -a
    echo "--- CPU inform√°ci√≥ ---"
    lscpu
    read -p "Nyomj Entert a folytat√°shoz..."
}

# Cockpit telep√≠t√©se √©s be√°ll√≠t√°sa
install_cockpit() {
    check_and_configure_trixie_repos
    echo "üöÄ Cockpit telep√≠t√©se..."
    apt update
    apt install -y cockpit
    systemctl enable --now cockpit.socket
    echo "‚úÖ Cockpit telep√≠tve √©s fut."
    echo "A webes fel√ºlet a k√∂vetkez≈ë c√≠men √©rhet≈ë el: https://<your-server-ip>:9090"
    read -p "Nyomj Entert a folytat√°shoz..."
}

# SSH bejelentkez≈ë sz√∂veg szerkeszt√©se
edit_ssh_banner() {
    echo "‚úçÔ∏è SSH bejelentkez≈ë sz√∂veg szerkeszt√©se."
    
    if ! command -v nano &> /dev/null; then
        echo "A 'nano' szerkeszt≈ë nincs telep√≠tve. Telep√≠tj√ºk..."
        apt update && apt install -y nano
    fi
    
    nano /etc/issue.net
    
    sed -i '/^Banner/d' /etc/ssh/sshd_config
    echo "Banner /etc/issue.net" | tee -a /etc/ssh/sshd_config > /dev/null
    systemctl restart sshd
    echo "‚úÖ SSH bejelentkez≈ë sz√∂veg elmentve √©s be√°ll√≠tva."
    read -p "Nyomj Entert a folytat√°shoz..."
}

# F≈ë ciklus
while true; do
    show_main_menu
    case $choice in
        1) configure_repos ;;
        2) update_system ;;
        3) install_basic_apps ;;
        4) show_network_menu ;;
        5) configure_hostname ;;
        6) manage_users ;;
        7) enable_ssh_root ;;
        8) list_system_info ;;
        9) install_cockpit ;;
        10) edit_ssh_banner ;;
        11) echo "üëã Viszl√°t!"; exit 0 ;;
        *) echo "√ârv√©nytelen v√°laszt√°s. K√©rlek, pr√≥b√°ld √∫jra."; read -p "Nyomj Entert a folytat√°shoz..." ;;
    esac
done
